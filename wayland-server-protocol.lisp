(DEFPACKAGE :WAYLAND-SERVER-PROTOCOL
  (:USE :COMMON-LISP :CFFI :WAYLAND-UTIL :WAYLAND-SERVER-CORE)
  (:EXPORT WL-DISPLAY-INTERFACE
           WL-DISPLAY-IMPLEMENTATION
           EMPTY-WL-DISPLAY-SYNC
           EMPTY-WL-DISPLAY-GET-REGISTRY
           IMPLEMENT-WL-DISPLAY
           WL-DISPLAY-SEND-ERROR
           WL-DISPLAY-SEND-DELETE-ID
           WL-DISPLAY-ERROR
           WL-REGISTRY-INTERFACE
           WL-REGISTRY-IMPLEMENTATION
           EMPTY-WL-REGISTRY-BIND
           IMPLEMENT-WL-REGISTRY
           WL-REGISTRY-SEND-GLOBAL
           WL-REGISTRY-SEND-GLOBAL-REMOVE
           WL-CALLBACK-INTERFACE
           WL-CALLBACK-IMPLEMENTATION
           IMPLEMENT-WL-CALLBACK
           WL-CALLBACK-SEND-DONE
           WL-COMPOSITOR-INTERFACE
           WL-COMPOSITOR-IMPLEMENTATION
           EMPTY-WL-COMPOSITOR-CREATE-SURFACE
           EMPTY-WL-COMPOSITOR-CREATE-REGION
           IMPLEMENT-WL-COMPOSITOR
           WL-SHM-POOL-INTERFACE
           WL-SHM-POOL-IMPLEMENTATION
           EMPTY-WL-SHM-POOL-CREATE-BUFFER
           EMPTY-WL-SHM-POOL-DESTROY
           EMPTY-WL-SHM-POOL-RESIZE
           IMPLEMENT-WL-SHM-POOL
           WL-SHM-INTERFACE
           WL-SHM-IMPLEMENTATION
           EMPTY-WL-SHM-CREATE-POOL
           IMPLEMENT-WL-SHM
           WL-SHM-SEND-FORMAT
           WL-SHM-ERROR
           WL-SHM-FORMAT
           WL-BUFFER-INTERFACE
           WL-BUFFER-IMPLEMENTATION
           EMPTY-WL-BUFFER-DESTROY
           IMPLEMENT-WL-BUFFER
           WL-BUFFER-SEND-RELEASE
           WL-DATA-OFFER-INTERFACE
           WL-DATA-OFFER-IMPLEMENTATION
           EMPTY-WL-DATA-OFFER-ACCEPT
           EMPTY-WL-DATA-OFFER-RECEIVE
           EMPTY-WL-DATA-OFFER-DESTROY
           EMPTY-WL-DATA-OFFER-FINISH
           EMPTY-WL-DATA-OFFER-SET-ACTIONS
           IMPLEMENT-WL-DATA-OFFER
           WL-DATA-OFFER-SEND-OFFER
           WL-DATA-OFFER-SEND-SOURCE-ACTIONS
           WL-DATA-OFFER-SEND-ACTION
           WL-DATA-OFFER-ERROR
           WL-DATA-SOURCE-INTERFACE
           WL-DATA-SOURCE-IMPLEMENTATION
           EMPTY-WL-DATA-SOURCE-OFFER
           EMPTY-WL-DATA-SOURCE-DESTROY
           EMPTY-WL-DATA-SOURCE-SET-ACTIONS
           IMPLEMENT-WL-DATA-SOURCE
           WL-DATA-SOURCE-SEND-TARGET
           WL-DATA-SOURCE-SEND-SEND
           WL-DATA-SOURCE-SEND-CANCELLED
           WL-DATA-SOURCE-SEND-DND-DROP-PERFORMED
           WL-DATA-SOURCE-SEND-DND-FINISHED
           WL-DATA-SOURCE-SEND-ACTION
           WL-DATA-SOURCE-ERROR
           WL-DATA-DEVICE-INTERFACE
           WL-DATA-DEVICE-IMPLEMENTATION
           EMPTY-WL-DATA-DEVICE-START-DRAG
           EMPTY-WL-DATA-DEVICE-SET-SELECTION
           EMPTY-WL-DATA-DEVICE-RELEASE
           IMPLEMENT-WL-DATA-DEVICE
           WL-DATA-DEVICE-SEND-DATA-OFFER
           WL-DATA-DEVICE-SEND-ENTER
           WL-DATA-DEVICE-SEND-LEAVE
           WL-DATA-DEVICE-SEND-MOTION
           WL-DATA-DEVICE-SEND-DROP
           WL-DATA-DEVICE-SEND-SELECTION
           WL-DATA-DEVICE-ERROR
           WL-DATA-DEVICE-MANAGER-INTERFACE
           WL-DATA-DEVICE-MANAGER-IMPLEMENTATION
           EMPTY-WL-DATA-DEVICE-MANAGER-CREATE-DATA-SOURCE
           EMPTY-WL-DATA-DEVICE-MANAGER-GET-DATA-DEVICE
           IMPLEMENT-WL-DATA-DEVICE-MANAGER
           WL-DATA-DEVICE-MANAGER-DND-ACTION
           WL-SHELL-INTERFACE
           WL-SHELL-IMPLEMENTATION
           EMPTY-WL-SHELL-GET-SHELL-SURFACE
           IMPLEMENT-WL-SHELL
           WL-SHELL-ERROR
           WL-SHELL-SURFACE-INTERFACE
           WL-SHELL-SURFACE-IMPLEMENTATION
           EMPTY-WL-SHELL-SURFACE-PONG
           EMPTY-WL-SHELL-SURFACE-MOVE
           EMPTY-WL-SHELL-SURFACE-RESIZE
           EMPTY-WL-SHELL-SURFACE-SET-TOPLEVEL
           EMPTY-WL-SHELL-SURFACE-SET-TRANSIENT
           EMPTY-WL-SHELL-SURFACE-SET-FULLSCREEN
           EMPTY-WL-SHELL-SURFACE-SET-POPUP
           EMPTY-WL-SHELL-SURFACE-SET-MAXIMIZED
           EMPTY-WL-SHELL-SURFACE-SET-TITLE
           EMPTY-WL-SHELL-SURFACE-SET-CLASS
           IMPLEMENT-WL-SHELL-SURFACE
           WL-SHELL-SURFACE-SEND-PING
           WL-SHELL-SURFACE-SEND-CONFIGURE
           WL-SHELL-SURFACE-SEND-POPUP-DONE
           WL-SHELL-SURFACE-RESIZE
           WL-SHELL-SURFACE-TRANSIENT
           WL-SHELL-SURFACE-FULLSCREEN-METHOD
           WL-SURFACE-INTERFACE
           WL-SURFACE-IMPLEMENTATION
           EMPTY-WL-SURFACE-DESTROY
           EMPTY-WL-SURFACE-ATTACH
           EMPTY-WL-SURFACE-DAMAGE
           EMPTY-WL-SURFACE-FRAME
           EMPTY-WL-SURFACE-SET-OPAQUE-REGION
           EMPTY-WL-SURFACE-SET-INPUT-REGION
           EMPTY-WL-SURFACE-COMMIT
           EMPTY-WL-SURFACE-SET-BUFFER-TRANSFORM
           EMPTY-WL-SURFACE-SET-BUFFER-SCALE
           EMPTY-WL-SURFACE-DAMAGE-BUFFER
           IMPLEMENT-WL-SURFACE
           WL-SURFACE-SEND-ENTER
           WL-SURFACE-SEND-LEAVE
           WL-SURFACE-ERROR
           WL-SEAT-INTERFACE
           WL-SEAT-IMPLEMENTATION
           EMPTY-WL-SEAT-GET-POINTER
           EMPTY-WL-SEAT-GET-KEYBOARD
           EMPTY-WL-SEAT-GET-TOUCH
           EMPTY-WL-SEAT-RELEASE
           IMPLEMENT-WL-SEAT
           WL-SEAT-SEND-CAPABILITIES
           WL-SEAT-SEND-NAME
           WL-SEAT-CAPABILITY
           WL-POINTER-INTERFACE
           WL-POINTER-IMPLEMENTATION
           EMPTY-WL-POINTER-SET-CURSOR
           EMPTY-WL-POINTER-RELEASE
           IMPLEMENT-WL-POINTER
           WL-POINTER-SEND-ENTER
           WL-POINTER-SEND-LEAVE
           WL-POINTER-SEND-MOTION
           WL-POINTER-SEND-BUTTON
           WL-POINTER-SEND-AXIS
           WL-POINTER-SEND-FRAME
           WL-POINTER-SEND-AXIS-SOURCE
           WL-POINTER-SEND-AXIS-STOP
           WL-POINTER-SEND-AXIS-DISCRETE
           WL-POINTER-ERROR
           WL-POINTER-BUTTON-STATE
           WL-POINTER-AXIS
           WL-POINTER-AXIS-SOURCE
           WL-KEYBOARD-INTERFACE
           WL-KEYBOARD-IMPLEMENTATION
           EMPTY-WL-KEYBOARD-RELEASE
           IMPLEMENT-WL-KEYBOARD
           WL-KEYBOARD-SEND-KEYMAP
           WL-KEYBOARD-SEND-ENTER
           WL-KEYBOARD-SEND-LEAVE
           WL-KEYBOARD-SEND-KEY
           WL-KEYBOARD-SEND-MODIFIERS
           WL-KEYBOARD-SEND-REPEAT-INFO
           WL-KEYBOARD-KEYMAP-FORMAT
           WL-KEYBOARD-KEY-STATE
           WL-TOUCH-INTERFACE
           WL-TOUCH-IMPLEMENTATION
           EMPTY-WL-TOUCH-RELEASE
           IMPLEMENT-WL-TOUCH
           WL-TOUCH-SEND-DOWN
           WL-TOUCH-SEND-UP
           WL-TOUCH-SEND-MOTION
           WL-TOUCH-SEND-FRAME
           WL-TOUCH-SEND-CANCEL
           WL-TOUCH-SEND-SHAPE
           WL-TOUCH-SEND-ORIENTATION
           WL-OUTPUT-INTERFACE
           WL-OUTPUT-IMPLEMENTATION
           EMPTY-WL-OUTPUT-RELEASE
           IMPLEMENT-WL-OUTPUT
           WL-OUTPUT-SEND-GEOMETRY
           WL-OUTPUT-SEND-MODE
           WL-OUTPUT-SEND-DONE
           WL-OUTPUT-SEND-SCALE
           WL-OUTPUT-SUBPIXEL
           WL-OUTPUT-TRANSFORM
           WL-OUTPUT-MODE
           WL-REGION-INTERFACE
           WL-REGION-IMPLEMENTATION
           EMPTY-WL-REGION-DESTROY
           EMPTY-WL-REGION-ADD
           EMPTY-WL-REGION-SUBTRACT
           IMPLEMENT-WL-REGION
           WL-SUBCOMPOSITOR-INTERFACE
           WL-SUBCOMPOSITOR-IMPLEMENTATION
           EMPTY-WL-SUBCOMPOSITOR-DESTROY
           EMPTY-WL-SUBCOMPOSITOR-GET-SUBSURFACE
           IMPLEMENT-WL-SUBCOMPOSITOR
           WL-SUBCOMPOSITOR-ERROR
           WL-SUBSURFACE-INTERFACE
           WL-SUBSURFACE-IMPLEMENTATION
           EMPTY-WL-SUBSURFACE-DESTROY
           EMPTY-WL-SUBSURFACE-SET-POSITION
           EMPTY-WL-SUBSURFACE-PLACE-ABOVE
           EMPTY-WL-SUBSURFACE-PLACE-BELOW
           EMPTY-WL-SUBSURFACE-SET-SYNC
           EMPTY-WL-SUBSURFACE-SET-DESYNC
           IMPLEMENT-WL-SUBSURFACE
           WL-SUBSURFACE-ERROR
           INITIALIZE-WAYLAND-SERVER-INTERFACES))

(IN-PACKAGE :WAYLAND-SERVER-PROTOCOL)

(DEFINE-FOREIGN-LIBRARY WAYLAND-SERVER (T (:DEFAULT "libwayland-server")))

(USE-FOREIGN-LIBRARY WAYLAND-SERVER)

(DEFPARAMETER WL-DISPLAY-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_display_interface"))

(DEFCSTRUCT WL-DISPLAY-IMPLEMENTATION (SYNC :POINTER) (GET-REGISTRY :POINTER))

(DEFCALLBACK EMPTY-WL-DISPLAY-SYNC :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (CALLBACK :POINTER)))

(DEFCALLBACK EMPTY-WL-DISPLAY-GET-REGISTRY :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (REGISTRY :POINTER)))

(DEFUN IMPLEMENT-WL-DISPLAY (&KEY (SYNC NIL) (GET-REGISTRY NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-DISPLAY-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DISPLAY-IMPLEMENTATION) 'SYNC)
            (IF SYNC
                SYNC
                (GET-CALLBACK 'EMPTY-WL-DISPLAY-SYNC)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DISPLAY-IMPLEMENTATION) 'GET-REGISTRY)
            (IF GET-REGISTRY
                GET-REGISTRY
                (GET-CALLBACK 'EMPTY-WL-DISPLAY-GET-REGISTRY)))
    IMPLEMENTATION))

(DEFUN WL-DISPLAY-SEND-ERROR (RESOURCE OBJECT-ID CODE MESSAGE)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :POINTER OBJECT-ID :UINT32 CODE :STRING
   MESSAGE))

(DEFUN WL-DISPLAY-SEND-DELETE-ID (RESOURCE ID)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :UINT32 ID))

(DEFCENUM WL-DISPLAY-ERROR (:INVALID-OBJECT 0) (:INVALID-METHOD 1)
 (:NO-MEMORY 2) (:IMPLEMENTATION 3))

(DEFPARAMETER WL-REGISTRY-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_registry_interface"))

(DEFCSTRUCT WL-REGISTRY-IMPLEMENTATION (BIND :POINTER))

(DEFCALLBACK EMPTY-WL-REGISTRY-BIND :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (NAME :UINT32) (ID :POINTER)))

(DEFUN IMPLEMENT-WL-REGISTRY (&KEY (BIND NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-REGISTRY-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-REGISTRY-IMPLEMENTATION) 'BIND)
            (IF BIND
                BIND
                (GET-CALLBACK 'EMPTY-WL-REGISTRY-BIND)))
    IMPLEMENTATION))

(DEFUN WL-REGISTRY-SEND-GLOBAL (RESOURCE NAME INTERFACE VERSION)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :UINT32 NAME :STRING INTERFACE :UINT32
   VERSION))

(DEFUN WL-REGISTRY-SEND-GLOBAL-REMOVE (RESOURCE NAME)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :UINT32 NAME))

(DEFPARAMETER WL-CALLBACK-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_callback_interface"))

(DEFCSTRUCT WL-CALLBACK-IMPLEMENTATION)

(DEFUN IMPLEMENT-WL-CALLBACK (&KEY)
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-CALLBACK-IMPLEMENTATION))))
    IMPLEMENTATION))

(DEFUN WL-CALLBACK-SEND-DONE (RESOURCE CALLBACK-DATA)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :UINT32 CALLBACK-DATA))

(DEFPARAMETER WL-COMPOSITOR-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_compositor_interface"))

(DEFCSTRUCT WL-COMPOSITOR-IMPLEMENTATION (CREATE-SURFACE :POINTER)
 (CREATE-REGION :POINTER))

(DEFCALLBACK EMPTY-WL-COMPOSITOR-CREATE-SURFACE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER)))

(DEFCALLBACK EMPTY-WL-COMPOSITOR-CREATE-REGION :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER)))

(DEFUN IMPLEMENT-WL-COMPOSITOR (&KEY (CREATE-SURFACE NIL) (CREATE-REGION NIL))
  (LET ((IMPLEMENTATION
         (FOREIGN-ALLOC '(:STRUCT WL-COMPOSITOR-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-COMPOSITOR-IMPLEMENTATION) 'CREATE-SURFACE)
            (IF CREATE-SURFACE
                CREATE-SURFACE
                (GET-CALLBACK 'EMPTY-WL-COMPOSITOR-CREATE-SURFACE)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-COMPOSITOR-IMPLEMENTATION) 'CREATE-REGION)
            (IF CREATE-REGION
                CREATE-REGION
                (GET-CALLBACK 'EMPTY-WL-COMPOSITOR-CREATE-REGION)))
    IMPLEMENTATION))

(DEFPARAMETER WL-SHM-POOL-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_shm_pool_interface"))

(DEFCSTRUCT WL-SHM-POOL-IMPLEMENTATION (CREATE-BUFFER :POINTER)
 (DESTROY :POINTER) (RESIZE :POINTER))

(DEFCALLBACK EMPTY-WL-SHM-POOL-CREATE-BUFFER :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER) (OFFSET :INT32)
  (WIDTH :INT32) (HEIGHT :INT32) (STRIDE :INT32) (FORMAT :UINT32)))

(DEFCALLBACK EMPTY-WL-SHM-POOL-DESTROY :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-SHM-POOL-RESIZE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SIZE :INT32)))

(DEFUN IMPLEMENT-WL-SHM-POOL
       (&KEY (CREATE-BUFFER NIL) (DESTROY NIL) (RESIZE NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-SHM-POOL-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHM-POOL-IMPLEMENTATION) 'CREATE-BUFFER)
            (IF CREATE-BUFFER
                CREATE-BUFFER
                (GET-CALLBACK 'EMPTY-WL-SHM-POOL-CREATE-BUFFER)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHM-POOL-IMPLEMENTATION) 'DESTROY)
            (IF DESTROY
                DESTROY
                (GET-CALLBACK 'EMPTY-WL-SHM-POOL-DESTROY)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHM-POOL-IMPLEMENTATION) 'RESIZE)
            (IF RESIZE
                RESIZE
                (GET-CALLBACK 'EMPTY-WL-SHM-POOL-RESIZE)))
    IMPLEMENTATION))

(DEFPARAMETER WL-SHM-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_shm_interface"))

(DEFCSTRUCT WL-SHM-IMPLEMENTATION (CREATE-POOL :POINTER))

(DEFCALLBACK EMPTY-WL-SHM-CREATE-POOL :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER) (FD :INT32)
  (SIZE :INT32)))

(DEFUN IMPLEMENT-WL-SHM (&KEY (CREATE-POOL NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-SHM-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION '(:STRUCT WL-SHM-IMPLEMENTATION)
           'CREATE-POOL)
            (IF CREATE-POOL
                CREATE-POOL
                (GET-CALLBACK 'EMPTY-WL-SHM-CREATE-POOL)))
    IMPLEMENTATION))

(DEFUN WL-SHM-SEND-FORMAT (RESOURCE FORMAT)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :UINT32 FORMAT))

(DEFCENUM WL-SHM-ERROR (:INVALID-FORMAT 0) (:INVALID-STRIDE 1) (:INVALID-FD 2))

(DEFBITFIELD WL-SHM-FORMAT (:ARGB8888 0) (:XRGB8888 1) (:C8 538982467)
 (:RGB332 943867730) (:BGR233 944916290) (:XRGB4444 842093144)
 (:XBGR4444 842089048) (:RGBX4444 842094674) (:BGRX4444 842094658)
 (:ARGB4444 842093121) (:ABGR4444 842089025) (:RGBA4444 842088786)
 (:BGRA4444 842088770) (:XRGB1555 892424792) (:XBGR1555 892420696)
 (:RGBX5551 892426322) (:BGRX5551 892426306) (:ARGB1555 892424769)
 (:ABGR1555 892420673) (:RGBA5551 892420434) (:BGRA5551 892420418)
 (:RGB565 909199186) (:BGR565 909199170) (:RGB888 875710290)
 (:BGR888 875710274) (:XBGR8888 875709016) (:RGBX8888 875714642)
 (:BGRX8888 875714626) (:ABGR8888 875708993) (:RGBA8888 875708754)
 (:BGRA8888 875708738) (:XRGB2101010 808669784) (:XBGR2101010 808665688)
 (:RGBX1010102 808671314) (:BGRX1010102 808671298) (:ARGB2101010 808669761)
 (:ABGR2101010 808665665) (:RGBA1010102 808665426) (:BGRA1010102 808665410)
 (:YUYV 1448695129) (:YVYU 1431918169) (:UYVY 1498831189) (:VYUY 1498765654)
 (:AYUV 1448433985) (:NV12 842094158) (:NV21 825382478) (:NV16 909203022)
 (:NV61 825644622) (:YUV410 961959257) (:YVU410 961893977) (:YUV411 825316697)
 (:YVU411 825316953) (:YUV420 842093913) (:YVU420 842094169)
 (:YUV422 909202777) (:YVU422 909203033) (:YUV444 875713881)
 (:YVU444 875714137) (:R8 538982482) (:R16 540422482) (:RG88 943212370)
 (:GR88 943215175) (:RG1616 842221394) (:GR1616 842224199)
 (:XRGB16161616F 1211388504) (:XBGR16161616F 1211384408)
 (:ARGB16161616F 1211388481) (:ABGR16161616F 1211384385) (:XYUV8888 1448434008)
 (:VUY888 875713878) (:VUY101010 808670550) (:Y210 808530521) (:Y212 842084953)
 (:Y216 909193817) (:Y410 808531033) (:Y412 842085465) (:Y416 909194329)
 (:XVYU2101010 808670808) (:XVYU12-16161616 909334104)
 (:XVYU16161616 942954072) (:Y0L0 810299481) (:X0L0 810299480)
 (:Y0L2 843853913) (:X0L2 843853912) (:YUV420-8BIT 942691673)
 (:YUV420-10BIT 808539481) (:XRGB8888-A8 943805016) (:XBGR8888-A8 943800920)
 (:RGBX8888-A8 943806546) (:BGRX8888-A8 943806530) (:RGB888-A8 943798354)
 (:BGR888-A8 943798338) (:RGB565-A8 943797586) (:BGR565-A8 943797570)
 (:NV24 875714126) (:NV42 842290766) (:P210 808530512) (:P010 808530000)
 (:P012 842084432) (:P016 909193296))

(DEFPARAMETER WL-BUFFER-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_buffer_interface"))

(DEFCSTRUCT WL-BUFFER-IMPLEMENTATION (DESTROY :POINTER))

(DEFCALLBACK EMPTY-WL-BUFFER-DESTROY :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFUN IMPLEMENT-WL-BUFFER (&KEY (DESTROY NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-BUFFER-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-BUFFER-IMPLEMENTATION) 'DESTROY)
            (IF DESTROY
                DESTROY
                (GET-CALLBACK 'EMPTY-WL-BUFFER-DESTROY)))
    IMPLEMENTATION))

(DEFUN WL-BUFFER-SEND-RELEASE (RESOURCE) (WL-RESOURCE-POST-EVENT RESOURCE 0))

(DEFPARAMETER WL-DATA-OFFER-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_data_offer_interface"))

(DEFCSTRUCT WL-DATA-OFFER-IMPLEMENTATION (ACCEPT :POINTER) (RECEIVE :POINTER)
 (DESTROY :POINTER) (FINISH :POINTER) (SET-ACTIONS :POINTER))

(DEFCALLBACK EMPTY-WL-DATA-OFFER-ACCEPT :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SERIAL :UINT32) (MIME-TYPE :STRING)))

(DEFCALLBACK EMPTY-WL-DATA-OFFER-RECEIVE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (MIME-TYPE :STRING) (FD :INT32)))

(DEFCALLBACK EMPTY-WL-DATA-OFFER-DESTROY :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-DATA-OFFER-FINISH :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-DATA-OFFER-SET-ACTIONS :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (DND-ACTIONS :UINT32)
  (PREFERRED-ACTION :UINT32)))

(DEFUN IMPLEMENT-WL-DATA-OFFER
       (
        &KEY (ACCEPT NIL) (RECEIVE NIL) (DESTROY NIL) (FINISH NIL)
        (SET-ACTIONS NIL))
  (LET ((IMPLEMENTATION
         (FOREIGN-ALLOC '(:STRUCT WL-DATA-OFFER-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-OFFER-IMPLEMENTATION) 'ACCEPT)
            (IF ACCEPT
                ACCEPT
                (GET-CALLBACK 'EMPTY-WL-DATA-OFFER-ACCEPT)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-OFFER-IMPLEMENTATION) 'RECEIVE)
            (IF RECEIVE
                RECEIVE
                (GET-CALLBACK 'EMPTY-WL-DATA-OFFER-RECEIVE)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-OFFER-IMPLEMENTATION) 'DESTROY)
            (IF DESTROY
                DESTROY
                (GET-CALLBACK 'EMPTY-WL-DATA-OFFER-DESTROY)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-OFFER-IMPLEMENTATION) 'FINISH)
            (IF FINISH
                FINISH
                (GET-CALLBACK 'EMPTY-WL-DATA-OFFER-FINISH)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-OFFER-IMPLEMENTATION) 'SET-ACTIONS)
            (IF SET-ACTIONS
                SET-ACTIONS
                (GET-CALLBACK 'EMPTY-WL-DATA-OFFER-SET-ACTIONS)))
    IMPLEMENTATION))

(DEFUN WL-DATA-OFFER-SEND-OFFER (RESOURCE MIME-TYPE)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :STRING MIME-TYPE))

(DEFUN WL-DATA-OFFER-SEND-SOURCE-ACTIONS (RESOURCE SOURCE-ACTIONS)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :UINT32 SOURCE-ACTIONS))

(DEFUN WL-DATA-OFFER-SEND-ACTION (RESOURCE DND-ACTION)
  (WL-RESOURCE-POST-EVENT RESOURCE 2 :UINT32 DND-ACTION))

(DEFCENUM WL-DATA-OFFER-ERROR (:INVALID-FINISH 0) (:INVALID-ACTION-MASK 1)
 (:INVALID-ACTION 2) (:INVALID-OFFER 3))

(DEFPARAMETER WL-DATA-SOURCE-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_data_source_interface"))

(DEFCSTRUCT WL-DATA-SOURCE-IMPLEMENTATION (OFFER :POINTER) (DESTROY :POINTER)
 (SET-ACTIONS :POINTER))

(DEFCALLBACK EMPTY-WL-DATA-SOURCE-OFFER :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (MIME-TYPE :STRING)))

(DEFCALLBACK EMPTY-WL-DATA-SOURCE-DESTROY :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-DATA-SOURCE-SET-ACTIONS :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (DND-ACTIONS :UINT32)))

(DEFUN IMPLEMENT-WL-DATA-SOURCE
       (&KEY (OFFER NIL) (DESTROY NIL) (SET-ACTIONS NIL))
  (LET ((IMPLEMENTATION
         (FOREIGN-ALLOC '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION) 'OFFER)
            (IF OFFER
                OFFER
                (GET-CALLBACK 'EMPTY-WL-DATA-SOURCE-OFFER)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION) 'DESTROY)
            (IF DESTROY
                DESTROY
                (GET-CALLBACK 'EMPTY-WL-DATA-SOURCE-DESTROY)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION) 'SET-ACTIONS)
            (IF SET-ACTIONS
                SET-ACTIONS
                (GET-CALLBACK 'EMPTY-WL-DATA-SOURCE-SET-ACTIONS)))
    IMPLEMENTATION))

(DEFUN WL-DATA-SOURCE-SEND-TARGET (RESOURCE MIME-TYPE)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :STRING MIME-TYPE))

(DEFUN WL-DATA-SOURCE-SEND-SEND (RESOURCE MIME-TYPE FD)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :STRING MIME-TYPE :INT32 FD))

(DEFUN WL-DATA-SOURCE-SEND-CANCELLED (RESOURCE)
  (WL-RESOURCE-POST-EVENT RESOURCE 2))

(DEFUN WL-DATA-SOURCE-SEND-DND-DROP-PERFORMED (RESOURCE)
  (WL-RESOURCE-POST-EVENT RESOURCE 3))

(DEFUN WL-DATA-SOURCE-SEND-DND-FINISHED (RESOURCE)
  (WL-RESOURCE-POST-EVENT RESOURCE 4))

(DEFUN WL-DATA-SOURCE-SEND-ACTION (RESOURCE DND-ACTION)
  (WL-RESOURCE-POST-EVENT RESOURCE 5 :UINT32 DND-ACTION))

(DEFCENUM WL-DATA-SOURCE-ERROR (:INVALID-ACTION-MASK 0) (:INVALID-SOURCE 1))

(DEFPARAMETER WL-DATA-DEVICE-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_data_device_interface"))

(DEFCSTRUCT WL-DATA-DEVICE-IMPLEMENTATION (START-DRAG :POINTER)
 (SET-SELECTION :POINTER) (RELEASE :POINTER))

(DEFCALLBACK EMPTY-WL-DATA-DEVICE-START-DRAG :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SOURCE :POINTER) (ORIGIN :POINTER)
  (ICON :POINTER) (SERIAL :UINT32)))

(DEFCALLBACK EMPTY-WL-DATA-DEVICE-SET-SELECTION :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SOURCE :POINTER) (SERIAL :UINT32)))

(DEFCALLBACK EMPTY-WL-DATA-DEVICE-RELEASE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFUN IMPLEMENT-WL-DATA-DEVICE
       (&KEY (START-DRAG NIL) (SET-SELECTION NIL) (RELEASE NIL))
  (LET ((IMPLEMENTATION
         (FOREIGN-ALLOC '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION) 'START-DRAG)
            (IF START-DRAG
                START-DRAG
                (GET-CALLBACK 'EMPTY-WL-DATA-DEVICE-START-DRAG)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION) 'SET-SELECTION)
            (IF SET-SELECTION
                SET-SELECTION
                (GET-CALLBACK 'EMPTY-WL-DATA-DEVICE-SET-SELECTION)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION) 'RELEASE)
            (IF RELEASE
                RELEASE
                (GET-CALLBACK 'EMPTY-WL-DATA-DEVICE-RELEASE)))
    IMPLEMENTATION))

(DEFUN WL-DATA-DEVICE-SEND-DATA-OFFER (RESOURCE ID)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :POINTER ID))

(DEFUN WL-DATA-DEVICE-SEND-ENTER (RESOURCE SERIAL SURFACE X Y ID)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :UINT32 SERIAL :POINTER SURFACE :INT32 X
   :INT32 Y :POINTER ID))

(DEFUN WL-DATA-DEVICE-SEND-LEAVE (RESOURCE) (WL-RESOURCE-POST-EVENT RESOURCE 2))

(DEFUN WL-DATA-DEVICE-SEND-MOTION (RESOURCE TIME X Y)
  (WL-RESOURCE-POST-EVENT RESOURCE 3 :UINT32 TIME :INT32 X :INT32 Y))

(DEFUN WL-DATA-DEVICE-SEND-DROP (RESOURCE) (WL-RESOURCE-POST-EVENT RESOURCE 4))

(DEFUN WL-DATA-DEVICE-SEND-SELECTION (RESOURCE ID)
  (WL-RESOURCE-POST-EVENT RESOURCE 5 :POINTER ID))

(DEFCENUM WL-DATA-DEVICE-ERROR (:ROLE 0))

(DEFPARAMETER WL-DATA-DEVICE-MANAGER-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_data_device_manager_interface"))

(DEFCSTRUCT WL-DATA-DEVICE-MANAGER-IMPLEMENTATION (CREATE-DATA-SOURCE :POINTER)
 (GET-DATA-DEVICE :POINTER))

(DEFCALLBACK EMPTY-WL-DATA-DEVICE-MANAGER-CREATE-DATA-SOURCE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER)))

(DEFCALLBACK EMPTY-WL-DATA-DEVICE-MANAGER-GET-DATA-DEVICE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER) (SEAT :POINTER)))

(DEFUN IMPLEMENT-WL-DATA-DEVICE-MANAGER
       (&KEY (CREATE-DATA-SOURCE NIL) (GET-DATA-DEVICE NIL))
  (LET ((IMPLEMENTATION
         (FOREIGN-ALLOC '(:STRUCT WL-DATA-DEVICE-MANAGER-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-DEVICE-MANAGER-IMPLEMENTATION)
           'CREATE-DATA-SOURCE)
            (IF CREATE-DATA-SOURCE
                CREATE-DATA-SOURCE
                (GET-CALLBACK
                 'EMPTY-WL-DATA-DEVICE-MANAGER-CREATE-DATA-SOURCE)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-DATA-DEVICE-MANAGER-IMPLEMENTATION) 'GET-DATA-DEVICE)
            (IF GET-DATA-DEVICE
                GET-DATA-DEVICE
                (GET-CALLBACK 'EMPTY-WL-DATA-DEVICE-MANAGER-GET-DATA-DEVICE)))
    IMPLEMENTATION))

(DEFCENUM WL-DATA-DEVICE-MANAGER-DND-ACTION (:NONE 0) (:COPY 1) (:MOVE 2)
 (:ASK 4))

(DEFPARAMETER WL-SHELL-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_shell_interface"))

(DEFCSTRUCT WL-SHELL-IMPLEMENTATION (GET-SHELL-SURFACE :POINTER))

(DEFCALLBACK EMPTY-WL-SHELL-GET-SHELL-SURFACE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER) (SURFACE :POINTER)))

(DEFUN IMPLEMENT-WL-SHELL (&KEY (GET-SHELL-SURFACE NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-SHELL-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION '(:STRUCT WL-SHELL-IMPLEMENTATION)
           'GET-SHELL-SURFACE)
            (IF GET-SHELL-SURFACE
                GET-SHELL-SURFACE
                (GET-CALLBACK 'EMPTY-WL-SHELL-GET-SHELL-SURFACE)))
    IMPLEMENTATION))

(DEFCENUM WL-SHELL-ERROR (:ROLE 0))

(DEFPARAMETER WL-SHELL-SURFACE-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_shell_surface_interface"))

(DEFCSTRUCT WL-SHELL-SURFACE-IMPLEMENTATION (PONG :POINTER) (MOVE :POINTER)
 (RESIZE :POINTER) (SET-TOPLEVEL :POINTER) (SET-TRANSIENT :POINTER)
 (SET-FULLSCREEN :POINTER) (SET-POPUP :POINTER) (SET-MAXIMIZED :POINTER)
 (SET-TITLE :POINTER) (SET-CLASS :POINTER))

(DEFCALLBACK EMPTY-WL-SHELL-SURFACE-PONG :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SERIAL :UINT32)))

(DEFCALLBACK EMPTY-WL-SHELL-SURFACE-MOVE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SEAT :POINTER) (SERIAL :UINT32)))

(DEFCALLBACK EMPTY-WL-SHELL-SURFACE-RESIZE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SEAT :POINTER) (SERIAL :UINT32)
  (EDGES :UINT32)))

(DEFCALLBACK EMPTY-WL-SHELL-SURFACE-SET-TOPLEVEL :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-SHELL-SURFACE-SET-TRANSIENT :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (PARENT :POINTER) (X :INT32) (Y :INT32)
  (FLAGS :UINT32)))

(DEFCALLBACK EMPTY-WL-SHELL-SURFACE-SET-FULLSCREEN :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (METHOD :UINT32) (FRAMERATE :UINT32)
  (OUTPUT :POINTER)))

(DEFCALLBACK EMPTY-WL-SHELL-SURFACE-SET-POPUP :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SEAT :POINTER) (SERIAL :UINT32)
  (PARENT :POINTER) (X :INT32) (Y :INT32) (FLAGS :UINT32)))

(DEFCALLBACK EMPTY-WL-SHELL-SURFACE-SET-MAXIMIZED :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (OUTPUT :POINTER)))

(DEFCALLBACK EMPTY-WL-SHELL-SURFACE-SET-TITLE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (TITLE :STRING)))

(DEFCALLBACK EMPTY-WL-SHELL-SURFACE-SET-CLASS :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (CLASS- :STRING)))

(DEFUN IMPLEMENT-WL-SHELL-SURFACE
       (
        &KEY (PONG NIL) (MOVE NIL) (RESIZE NIL) (SET-TOPLEVEL NIL)
        (SET-TRANSIENT NIL) (SET-FULLSCREEN NIL) (SET-POPUP NIL)
        (SET-MAXIMIZED NIL) (SET-TITLE NIL) (SET-CLASS NIL))
  (LET ((IMPLEMENTATION
         (FOREIGN-ALLOC '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION) 'PONG)
            (IF PONG
                PONG
                (GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-PONG)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION) 'MOVE)
            (IF MOVE
                MOVE
                (GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-MOVE)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION) 'RESIZE)
            (IF RESIZE
                RESIZE
                (GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-RESIZE)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION) 'SET-TOPLEVEL)
            (IF SET-TOPLEVEL
                SET-TOPLEVEL
                (GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-SET-TOPLEVEL)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION) 'SET-TRANSIENT)
            (IF SET-TRANSIENT
                SET-TRANSIENT
                (GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-SET-TRANSIENT)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION) 'SET-FULLSCREEN)
            (IF SET-FULLSCREEN
                SET-FULLSCREEN
                (GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-SET-FULLSCREEN)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION) 'SET-POPUP)
            (IF SET-POPUP
                SET-POPUP
                (GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-SET-POPUP)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION) 'SET-MAXIMIZED)
            (IF SET-MAXIMIZED
                SET-MAXIMIZED
                (GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-SET-MAXIMIZED)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION) 'SET-TITLE)
            (IF SET-TITLE
                SET-TITLE
                (GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-SET-TITLE)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION) 'SET-CLASS)
            (IF SET-CLASS
                SET-CLASS
                (GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-SET-CLASS)))
    IMPLEMENTATION))

(DEFUN WL-SHELL-SURFACE-SEND-PING (RESOURCE SERIAL)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :UINT32 SERIAL))

(DEFUN WL-SHELL-SURFACE-SEND-CONFIGURE (RESOURCE EDGES WIDTH HEIGHT)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :UINT32 EDGES :INT32 WIDTH :INT32 HEIGHT))

(DEFUN WL-SHELL-SURFACE-SEND-POPUP-DONE (RESOURCE)
  (WL-RESOURCE-POST-EVENT RESOURCE 2))

(DEFCENUM WL-SHELL-SURFACE-RESIZE (:NONE 0) (:TOP 1) (:BOTTOM 2) (:LEFT 4)
 (:TOP-LEFT 5) (:BOTTOM-LEFT 6) (:RIGHT 8) (:TOP-RIGHT 9) (:BOTTOM-RIGHT 10))

(DEFBITFIELD WL-SHELL-SURFACE-TRANSIENT (:INACTIVE 1))

(DEFCENUM WL-SHELL-SURFACE-FULLSCREEN-METHOD (:DEFAULT 0) (:SCALE 1)
 (:DRIVER 2) (:FILL 3))

(DEFPARAMETER WL-SURFACE-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_surface_interface"))

(DEFCSTRUCT WL-SURFACE-IMPLEMENTATION (DESTROY :POINTER) (ATTACH :POINTER)
 (DAMAGE :POINTER) (FRAME :POINTER) (SET-OPAQUE-REGION :POINTER)
 (SET-INPUT-REGION :POINTER) (COMMIT :POINTER) (SET-BUFFER-TRANSFORM :POINTER)
 (SET-BUFFER-SCALE :POINTER) (DAMAGE-BUFFER :POINTER))

(DEFCALLBACK EMPTY-WL-SURFACE-DESTROY :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-SURFACE-ATTACH :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (BUFFER :POINTER) (X :INT32)
  (Y :INT32)))

(DEFCALLBACK EMPTY-WL-SURFACE-DAMAGE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (X :INT32) (Y :INT32) (WIDTH :INT32)
  (HEIGHT :INT32)))

(DEFCALLBACK EMPTY-WL-SURFACE-FRAME :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (CALLBACK :POINTER)))

(DEFCALLBACK EMPTY-WL-SURFACE-SET-OPAQUE-REGION :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (REGION :POINTER)))

(DEFCALLBACK EMPTY-WL-SURFACE-SET-INPUT-REGION :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (REGION :POINTER)))

(DEFCALLBACK EMPTY-WL-SURFACE-COMMIT :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-SURFACE-SET-BUFFER-TRANSFORM :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (TRANSFORM :INT32)))

(DEFCALLBACK EMPTY-WL-SURFACE-SET-BUFFER-SCALE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SCALE :INT32)))

(DEFCALLBACK EMPTY-WL-SURFACE-DAMAGE-BUFFER :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (X :INT32) (Y :INT32) (WIDTH :INT32)
  (HEIGHT :INT32)))

(DEFUN IMPLEMENT-WL-SURFACE
       (
        &KEY (DESTROY NIL) (ATTACH NIL) (DAMAGE NIL) (FRAME NIL)
        (SET-OPAQUE-REGION NIL) (SET-INPUT-REGION NIL) (COMMIT NIL)
        (SET-BUFFER-TRANSFORM NIL) (SET-BUFFER-SCALE NIL) (DAMAGE-BUFFER NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-SURFACE-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'DESTROY)
            (IF DESTROY
                DESTROY
                (GET-CALLBACK 'EMPTY-WL-SURFACE-DESTROY)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'ATTACH)
            (IF ATTACH
                ATTACH
                (GET-CALLBACK 'EMPTY-WL-SURFACE-ATTACH)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'DAMAGE)
            (IF DAMAGE
                DAMAGE
                (GET-CALLBACK 'EMPTY-WL-SURFACE-DAMAGE)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'FRAME)
            (IF FRAME
                FRAME
                (GET-CALLBACK 'EMPTY-WL-SURFACE-FRAME)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'SET-OPAQUE-REGION)
            (IF SET-OPAQUE-REGION
                SET-OPAQUE-REGION
                (GET-CALLBACK 'EMPTY-WL-SURFACE-SET-OPAQUE-REGION)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'SET-INPUT-REGION)
            (IF SET-INPUT-REGION
                SET-INPUT-REGION
                (GET-CALLBACK 'EMPTY-WL-SURFACE-SET-INPUT-REGION)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'COMMIT)
            (IF COMMIT
                COMMIT
                (GET-CALLBACK 'EMPTY-WL-SURFACE-COMMIT)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'SET-BUFFER-TRANSFORM)
            (IF SET-BUFFER-TRANSFORM
                SET-BUFFER-TRANSFORM
                (GET-CALLBACK 'EMPTY-WL-SURFACE-SET-BUFFER-TRANSFORM)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'SET-BUFFER-SCALE)
            (IF SET-BUFFER-SCALE
                SET-BUFFER-SCALE
                (GET-CALLBACK 'EMPTY-WL-SURFACE-SET-BUFFER-SCALE)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'DAMAGE-BUFFER)
            (IF DAMAGE-BUFFER
                DAMAGE-BUFFER
                (GET-CALLBACK 'EMPTY-WL-SURFACE-DAMAGE-BUFFER)))
    IMPLEMENTATION))

(DEFUN WL-SURFACE-SEND-ENTER (RESOURCE OUTPUT)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :POINTER OUTPUT))

(DEFUN WL-SURFACE-SEND-LEAVE (RESOURCE OUTPUT)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :POINTER OUTPUT))

(DEFCENUM WL-SURFACE-ERROR (:INVALID-SCALE 0) (:INVALID-TRANSFORM 1))

(DEFPARAMETER WL-SEAT-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_seat_interface"))

(DEFCSTRUCT WL-SEAT-IMPLEMENTATION (GET-POINTER :POINTER)
 (GET-KEYBOARD :POINTER) (GET-TOUCH :POINTER) (RELEASE :POINTER))

(DEFCALLBACK EMPTY-WL-SEAT-GET-POINTER :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER)))

(DEFCALLBACK EMPTY-WL-SEAT-GET-KEYBOARD :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER)))

(DEFCALLBACK EMPTY-WL-SEAT-GET-TOUCH :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER)))

(DEFCALLBACK EMPTY-WL-SEAT-RELEASE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFUN IMPLEMENT-WL-SEAT
       (
        &KEY (GET-POINTER NIL) (GET-KEYBOARD NIL) (GET-TOUCH NIL)
        (RELEASE NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-SEAT-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION '(:STRUCT WL-SEAT-IMPLEMENTATION)
           'GET-POINTER)
            (IF GET-POINTER
                GET-POINTER
                (GET-CALLBACK 'EMPTY-WL-SEAT-GET-POINTER)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION '(:STRUCT WL-SEAT-IMPLEMENTATION)
           'GET-KEYBOARD)
            (IF GET-KEYBOARD
                GET-KEYBOARD
                (GET-CALLBACK 'EMPTY-WL-SEAT-GET-KEYBOARD)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION '(:STRUCT WL-SEAT-IMPLEMENTATION)
           'GET-TOUCH)
            (IF GET-TOUCH
                GET-TOUCH
                (GET-CALLBACK 'EMPTY-WL-SEAT-GET-TOUCH)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION '(:STRUCT WL-SEAT-IMPLEMENTATION)
           'RELEASE)
            (IF RELEASE
                RELEASE
                (GET-CALLBACK 'EMPTY-WL-SEAT-RELEASE)))
    IMPLEMENTATION))

(DEFUN WL-SEAT-SEND-CAPABILITIES (RESOURCE CAPABILITIES)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :UINT32 CAPABILITIES))

(DEFUN WL-SEAT-SEND-NAME (RESOURCE NAME)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :STRING NAME))

(DEFCENUM WL-SEAT-CAPABILITY (:POINTER 1) (:KEYBOARD 2) (:TOUCH 4))

(DEFPARAMETER WL-POINTER-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_pointer_interface"))

(DEFCSTRUCT WL-POINTER-IMPLEMENTATION (SET-CURSOR :POINTER) (RELEASE :POINTER))

(DEFCALLBACK EMPTY-WL-POINTER-SET-CURSOR :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SERIAL :UINT32) (SURFACE :POINTER)
  (HOTSPOT-X :INT32) (HOTSPOT-Y :INT32)))

(DEFCALLBACK EMPTY-WL-POINTER-RELEASE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFUN IMPLEMENT-WL-POINTER (&KEY (SET-CURSOR NIL) (RELEASE NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-POINTER-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-POINTER-IMPLEMENTATION) 'SET-CURSOR)
            (IF SET-CURSOR
                SET-CURSOR
                (GET-CALLBACK 'EMPTY-WL-POINTER-SET-CURSOR)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-POINTER-IMPLEMENTATION) 'RELEASE)
            (IF RELEASE
                RELEASE
                (GET-CALLBACK 'EMPTY-WL-POINTER-RELEASE)))
    IMPLEMENTATION))

(DEFUN WL-POINTER-SEND-ENTER (RESOURCE SERIAL SURFACE SURFACE-X SURFACE-Y)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :UINT32 SERIAL :POINTER SURFACE :INT32
   SURFACE-X :INT32 SURFACE-Y))

(DEFUN WL-POINTER-SEND-LEAVE (RESOURCE SERIAL SURFACE)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :UINT32 SERIAL :POINTER SURFACE))

(DEFUN WL-POINTER-SEND-MOTION (RESOURCE TIME SURFACE-X SURFACE-Y)
  (WL-RESOURCE-POST-EVENT RESOURCE 2 :UINT32 TIME :INT32 SURFACE-X :INT32
   SURFACE-Y))

(DEFUN WL-POINTER-SEND-BUTTON (RESOURCE SERIAL TIME BUTTON STATE)
  (WL-RESOURCE-POST-EVENT RESOURCE 3 :UINT32 SERIAL :UINT32 TIME :UINT32 BUTTON
   :UINT32 STATE))

(DEFUN WL-POINTER-SEND-AXIS (RESOURCE TIME AXIS VALUE)
  (WL-RESOURCE-POST-EVENT RESOURCE 4 :UINT32 TIME :UINT32 AXIS :INT32 VALUE))

(DEFUN WL-POINTER-SEND-FRAME (RESOURCE) (WL-RESOURCE-POST-EVENT RESOURCE 5))

(DEFUN WL-POINTER-SEND-AXIS-SOURCE (RESOURCE AXIS-SOURCE)
  (WL-RESOURCE-POST-EVENT RESOURCE 6 :UINT32 AXIS-SOURCE))

(DEFUN WL-POINTER-SEND-AXIS-STOP (RESOURCE TIME AXIS)
  (WL-RESOURCE-POST-EVENT RESOURCE 7 :UINT32 TIME :UINT32 AXIS))

(DEFUN WL-POINTER-SEND-AXIS-DISCRETE (RESOURCE AXIS DISCRETE)
  (WL-RESOURCE-POST-EVENT RESOURCE 8 :UINT32 AXIS :INT32 DISCRETE))

(DEFCENUM WL-POINTER-ERROR (:ROLE 0))

(DEFCENUM WL-POINTER-BUTTON-STATE (:RELEASED 0) (:PRESSED 1))

(DEFCENUM WL-POINTER-AXIS (:VERTICAL-SCROLL 0) (:HORIZONTAL-SCROLL 1))

(DEFCENUM WL-POINTER-AXIS-SOURCE (:WHEEL 0) (:FINGER 1) (:CONTINUOUS 2)
 (:WHEEL-TILT 3))

(DEFPARAMETER WL-KEYBOARD-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_keyboard_interface"))

(DEFCSTRUCT WL-KEYBOARD-IMPLEMENTATION (RELEASE :POINTER))

(DEFCALLBACK EMPTY-WL-KEYBOARD-RELEASE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFUN IMPLEMENT-WL-KEYBOARD (&KEY (RELEASE NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-KEYBOARD-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-KEYBOARD-IMPLEMENTATION) 'RELEASE)
            (IF RELEASE
                RELEASE
                (GET-CALLBACK 'EMPTY-WL-KEYBOARD-RELEASE)))
    IMPLEMENTATION))

(DEFUN WL-KEYBOARD-SEND-KEYMAP (RESOURCE FORMAT FD SIZE)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :UINT32 FORMAT :INT32 FD :UINT32 SIZE))

(DEFUN WL-KEYBOARD-SEND-ENTER (RESOURCE SERIAL SURFACE KEYS)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :UINT32 SERIAL :POINTER SURFACE :POINTER
   KEYS))

(DEFUN WL-KEYBOARD-SEND-LEAVE (RESOURCE SERIAL SURFACE)
  (WL-RESOURCE-POST-EVENT RESOURCE 2 :UINT32 SERIAL :POINTER SURFACE))

(DEFUN WL-KEYBOARD-SEND-KEY (RESOURCE SERIAL TIME KEY STATE)
  (WL-RESOURCE-POST-EVENT RESOURCE 3 :UINT32 SERIAL :UINT32 TIME :UINT32 KEY
   :UINT32 STATE))

(DEFUN WL-KEYBOARD-SEND-MODIFIERS
       (RESOURCE SERIAL MODS-DEPRESSED MODS-LATCHED MODS-LOCKED GROUP)
  (WL-RESOURCE-POST-EVENT RESOURCE 4 :UINT32 SERIAL :UINT32 MODS-DEPRESSED
   :UINT32 MODS-LATCHED :UINT32 MODS-LOCKED :UINT32 GROUP))

(DEFUN WL-KEYBOARD-SEND-REPEAT-INFO (RESOURCE RATE DELAY)
  (WL-RESOURCE-POST-EVENT RESOURCE 5 :INT32 RATE :INT32 DELAY))

(DEFCENUM WL-KEYBOARD-KEYMAP-FORMAT (:NO-KEYMAP 0) (:XKB-V1 1))

(DEFCENUM WL-KEYBOARD-KEY-STATE (:RELEASED 0) (:PRESSED 1))

(DEFPARAMETER WL-TOUCH-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_touch_interface"))

(DEFCSTRUCT WL-TOUCH-IMPLEMENTATION (RELEASE :POINTER))

(DEFCALLBACK EMPTY-WL-TOUCH-RELEASE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFUN IMPLEMENT-WL-TOUCH (&KEY (RELEASE NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-TOUCH-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION '(:STRUCT WL-TOUCH-IMPLEMENTATION)
           'RELEASE)
            (IF RELEASE
                RELEASE
                (GET-CALLBACK 'EMPTY-WL-TOUCH-RELEASE)))
    IMPLEMENTATION))

(DEFUN WL-TOUCH-SEND-DOWN (RESOURCE SERIAL TIME SURFACE ID X Y)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :UINT32 SERIAL :UINT32 TIME :POINTER
   SURFACE :INT32 ID :INT32 X :INT32 Y))

(DEFUN WL-TOUCH-SEND-UP (RESOURCE SERIAL TIME ID)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :UINT32 SERIAL :UINT32 TIME :INT32 ID))

(DEFUN WL-TOUCH-SEND-MOTION (RESOURCE TIME ID X Y)
  (WL-RESOURCE-POST-EVENT RESOURCE 2 :UINT32 TIME :INT32 ID :INT32 X :INT32 Y))

(DEFUN WL-TOUCH-SEND-FRAME (RESOURCE) (WL-RESOURCE-POST-EVENT RESOURCE 3))

(DEFUN WL-TOUCH-SEND-CANCEL (RESOURCE) (WL-RESOURCE-POST-EVENT RESOURCE 4))

(DEFUN WL-TOUCH-SEND-SHAPE (RESOURCE ID MAJOR MINOR)
  (WL-RESOURCE-POST-EVENT RESOURCE 5 :INT32 ID :INT32 MAJOR :INT32 MINOR))

(DEFUN WL-TOUCH-SEND-ORIENTATION (RESOURCE ID ORIENTATION)
  (WL-RESOURCE-POST-EVENT RESOURCE 6 :INT32 ID :INT32 ORIENTATION))

(DEFPARAMETER WL-OUTPUT-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_output_interface"))

(DEFCSTRUCT WL-OUTPUT-IMPLEMENTATION (RELEASE :POINTER))

(DEFCALLBACK EMPTY-WL-OUTPUT-RELEASE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFUN IMPLEMENT-WL-OUTPUT (&KEY (RELEASE NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-OUTPUT-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-OUTPUT-IMPLEMENTATION) 'RELEASE)
            (IF RELEASE
                RELEASE
                (GET-CALLBACK 'EMPTY-WL-OUTPUT-RELEASE)))
    IMPLEMENTATION))

(DEFUN WL-OUTPUT-SEND-GEOMETRY
       (RESOURCE X Y PHYSICAL-WIDTH PHYSICAL-HEIGHT SUBPIXEL MAKE MODEL
        TRANSFORM)
  (WL-RESOURCE-POST-EVENT RESOURCE 0 :INT32 X :INT32 Y :INT32 PHYSICAL-WIDTH
   :INT32 PHYSICAL-HEIGHT :INT32 SUBPIXEL :STRING MAKE :STRING MODEL :INT32
   TRANSFORM))

(DEFUN WL-OUTPUT-SEND-MODE (RESOURCE FLAGS WIDTH HEIGHT REFRESH)
  (WL-RESOURCE-POST-EVENT RESOURCE 1 :UINT32 FLAGS :INT32 WIDTH :INT32 HEIGHT
   :INT32 REFRESH))

(DEFUN WL-OUTPUT-SEND-DONE (RESOURCE) (WL-RESOURCE-POST-EVENT RESOURCE 2))

(DEFUN WL-OUTPUT-SEND-SCALE (RESOURCE FACTOR)
  (WL-RESOURCE-POST-EVENT RESOURCE 3 :INT32 FACTOR))

(DEFCENUM WL-OUTPUT-SUBPIXEL (:UNKNOWN 0) (:NONE 1) (:HORIZONTAL-RGB 2)
 (:HORIZONTAL-BGR 3) (:VERTICAL-RGB 4) (:VERTICAL-BGR 5))

(DEFCENUM WL-OUTPUT-TRANSFORM (:NORMAL 0) (:|90| 1) (:|180| 2) (:|270| 3)
 (:FLIPPED 4) (:FLIPPED-90 5) (:FLIPPED-180 6) (:FLIPPED-270 7))

(DEFBITFIELD WL-OUTPUT-MODE (:CURRENT 1) (:PREFERRED 2))

(DEFPARAMETER WL-REGION-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_region_interface"))

(DEFCSTRUCT WL-REGION-IMPLEMENTATION (DESTROY :POINTER) (ADD :POINTER)
 (SUBTRACT :POINTER))

(DEFCALLBACK EMPTY-WL-REGION-DESTROY :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-REGION-ADD :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (X :INT32) (Y :INT32) (WIDTH :INT32)
  (HEIGHT :INT32)))

(DEFCALLBACK EMPTY-WL-REGION-SUBTRACT :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (X :INT32) (Y :INT32) (WIDTH :INT32)
  (HEIGHT :INT32)))

(DEFUN IMPLEMENT-WL-REGION (&KEY (DESTROY NIL) (ADD NIL) (SUBTRACT NIL))
  (LET ((IMPLEMENTATION (FOREIGN-ALLOC '(:STRUCT WL-REGION-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-REGION-IMPLEMENTATION) 'DESTROY)
            (IF DESTROY
                DESTROY
                (GET-CALLBACK 'EMPTY-WL-REGION-DESTROY)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-REGION-IMPLEMENTATION) 'ADD)
            (IF ADD
                ADD
                (GET-CALLBACK 'EMPTY-WL-REGION-ADD)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-REGION-IMPLEMENTATION) 'SUBTRACT)
            (IF SUBTRACT
                SUBTRACT
                (GET-CALLBACK 'EMPTY-WL-REGION-SUBTRACT)))
    IMPLEMENTATION))

(DEFPARAMETER WL-SUBCOMPOSITOR-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_subcompositor_interface"))

(DEFCSTRUCT WL-SUBCOMPOSITOR-IMPLEMENTATION (DESTROY :POINTER)
 (GET-SUBSURFACE :POINTER))

(DEFCALLBACK EMPTY-WL-SUBCOMPOSITOR-DESTROY :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-SUBCOMPOSITOR-GET-SUBSURFACE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (ID :POINTER) (SURFACE :POINTER)
  (PARENT :POINTER)))

(DEFUN IMPLEMENT-WL-SUBCOMPOSITOR (&KEY (DESTROY NIL) (GET-SUBSURFACE NIL))
  (LET ((IMPLEMENTATION
         (FOREIGN-ALLOC '(:STRUCT WL-SUBCOMPOSITOR-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SUBCOMPOSITOR-IMPLEMENTATION) 'DESTROY)
            (IF DESTROY
                DESTROY
                (GET-CALLBACK 'EMPTY-WL-SUBCOMPOSITOR-DESTROY)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SUBCOMPOSITOR-IMPLEMENTATION) 'GET-SUBSURFACE)
            (IF GET-SUBSURFACE
                GET-SUBSURFACE
                (GET-CALLBACK 'EMPTY-WL-SUBCOMPOSITOR-GET-SUBSURFACE)))
    IMPLEMENTATION))

(DEFCENUM WL-SUBCOMPOSITOR-ERROR (:BAD-SURFACE 0))

(DEFPARAMETER WL-SUBSURFACE-INTERFACE
  (FOREIGN-SYMBOL-POINTER "wl_subsurface_interface"))

(DEFCSTRUCT WL-SUBSURFACE-IMPLEMENTATION (DESTROY :POINTER)
 (SET-POSITION :POINTER) (PLACE-ABOVE :POINTER) (PLACE-BELOW :POINTER)
 (SET-SYNC :POINTER) (SET-DESYNC :POINTER))

(DEFCALLBACK EMPTY-WL-SUBSURFACE-DESTROY :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-SUBSURFACE-SET-POSITION :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (X :INT32) (Y :INT32)))

(DEFCALLBACK EMPTY-WL-SUBSURFACE-PLACE-ABOVE :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SIBLING :POINTER)))

(DEFCALLBACK EMPTY-WL-SUBSURFACE-PLACE-BELOW :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER) (SIBLING :POINTER)))

(DEFCALLBACK EMPTY-WL-SUBSURFACE-SET-SYNC :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFCALLBACK EMPTY-WL-SUBSURFACE-SET-DESYNC :VOID
 ((CLIENT :POINTER) (RESOURCE :POINTER)))

(DEFUN IMPLEMENT-WL-SUBSURFACE
       (
        &KEY (DESTROY NIL) (SET-POSITION NIL) (PLACE-ABOVE NIL)
        (PLACE-BELOW NIL) (SET-SYNC NIL) (SET-DESYNC NIL))
  (LET ((IMPLEMENTATION
         (FOREIGN-ALLOC '(:STRUCT WL-SUBSURFACE-IMPLEMENTATION))))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SUBSURFACE-IMPLEMENTATION) 'DESTROY)
            (IF DESTROY
                DESTROY
                (GET-CALLBACK 'EMPTY-WL-SUBSURFACE-DESTROY)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SUBSURFACE-IMPLEMENTATION) 'SET-POSITION)
            (IF SET-POSITION
                SET-POSITION
                (GET-CALLBACK 'EMPTY-WL-SUBSURFACE-SET-POSITION)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SUBSURFACE-IMPLEMENTATION) 'PLACE-ABOVE)
            (IF PLACE-ABOVE
                PLACE-ABOVE
                (GET-CALLBACK 'EMPTY-WL-SUBSURFACE-PLACE-ABOVE)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SUBSURFACE-IMPLEMENTATION) 'PLACE-BELOW)
            (IF PLACE-BELOW
                PLACE-BELOW
                (GET-CALLBACK 'EMPTY-WL-SUBSURFACE-PLACE-BELOW)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SUBSURFACE-IMPLEMENTATION) 'SET-SYNC)
            (IF SET-SYNC
                SET-SYNC
                (GET-CALLBACK 'EMPTY-WL-SUBSURFACE-SET-SYNC)))
    (SETF (FOREIGN-SLOT-VALUE IMPLEMENTATION
           '(:STRUCT WL-SUBSURFACE-IMPLEMENTATION) 'SET-DESYNC)
            (IF SET-DESYNC
                SET-DESYNC
                (GET-CALLBACK 'EMPTY-WL-SUBSURFACE-SET-DESYNC)))
    IMPLEMENTATION))

(DEFCENUM WL-SUBSURFACE-ERROR (:BAD-SURFACE 0))

(DEFUN INITIALIZE-WAYLAND-SERVER-INTERFACES ()
  (SETF WL-DISPLAY-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_display_interface"))
  (SETF WL-REGISTRY-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_registry_interface"))
  (SETF WL-CALLBACK-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_callback_interface"))
  (SETF WL-COMPOSITOR-INTERFACE
          (FOREIGN-SYMBOL-POINTER "wl_compositor_interface"))
  (SETF WL-SHM-POOL-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_shm_pool_interface"))
  (SETF WL-SHM-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_shm_interface"))
  (SETF WL-BUFFER-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_buffer_interface"))
  (SETF WL-DATA-OFFER-INTERFACE
          (FOREIGN-SYMBOL-POINTER "wl_data_offer_interface"))
  (SETF WL-DATA-SOURCE-INTERFACE
          (FOREIGN-SYMBOL-POINTER "wl_data_source_interface"))
  (SETF WL-DATA-DEVICE-INTERFACE
          (FOREIGN-SYMBOL-POINTER "wl_data_device_interface"))
  (SETF WL-DATA-DEVICE-MANAGER-INTERFACE
          (FOREIGN-SYMBOL-POINTER "wl_data_device_manager_interface"))
  (SETF WL-SHELL-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_shell_interface"))
  (SETF WL-SHELL-SURFACE-INTERFACE
          (FOREIGN-SYMBOL-POINTER "wl_shell_surface_interface"))
  (SETF WL-SURFACE-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_surface_interface"))
  (SETF WL-SEAT-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_seat_interface"))
  (SETF WL-POINTER-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_pointer_interface"))
  (SETF WL-KEYBOARD-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_keyboard_interface"))
  (SETF WL-TOUCH-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_touch_interface"))
  (SETF WL-OUTPUT-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_output_interface"))
  (SETF WL-REGION-INTERFACE (FOREIGN-SYMBOL-POINTER "wl_region_interface"))
  (SETF WL-SUBCOMPOSITOR-INTERFACE
          (FOREIGN-SYMBOL-POINTER "wl_subcompositor_interface"))
  (SETF WL-SUBSURFACE-INTERFACE
          (FOREIGN-SYMBOL-POINTER "wl_subsurface_interface")))

