(DEFPACKAGE :WAYLAND-CLIENT-PROTOCOL
  (:USE :COMMON-LISP :CFFI :WAYLAND-UTIL :WAYLAND-CLIENT-CORE)
  (:EXPORT *WL-DISPLAY-INTERFACE*
           WL-DISPLAY-IMPLEMENTATION
           EMPTY-WL-DISPLAY-ERROR
           EMPTY-WL-DISPLAY-DELETE-ID
           IMPLEMENT-WL-DISPLAY
           WL-DISPLAY-SEND-SYNC
           WL-DISPLAY-SEND-GET-REGISTRY
           WL-DISPLAY-ERROR
           *WL-REGISTRY-INTERFACE*
           WL-REGISTRY-IMPLEMENTATION
           EMPTY-WL-REGISTRY-GLOBAL
           EMPTY-WL-REGISTRY-GLOBAL-REMOVE
           IMPLEMENT-WL-REGISTRY
           WL-REGISTRY-SEND-BIND
           *WL-CALLBACK-INTERFACE*
           WL-CALLBACK-IMPLEMENTATION
           EMPTY-WL-CALLBACK-DONE
           IMPLEMENT-WL-CALLBACK
           *WL-COMPOSITOR-INTERFACE*
           WL-COMPOSITOR-IMPLEMENTATION
           IMPLEMENT-WL-COMPOSITOR
           WL-COMPOSITOR-SEND-CREATE-SURFACE
           WL-COMPOSITOR-SEND-CREATE-REGION
           *WL-SHM-POOL-INTERFACE*
           WL-SHM-POOL-IMPLEMENTATION
           IMPLEMENT-WL-SHM-POOL
           WL-SHM-POOL-SEND-CREATE-BUFFER
           WL-SHM-POOL-SEND-DESTROY
           WL-SHM-POOL-SEND-RESIZE
           *WL-SHM-INTERFACE*
           WL-SHM-IMPLEMENTATION
           EMPTY-WL-SHM-FORMAT
           IMPLEMENT-WL-SHM
           WL-SHM-SEND-CREATE-POOL
           WL-SHM-ERROR
           WL-SHM-FORMAT
           *WL-BUFFER-INTERFACE*
           WL-BUFFER-IMPLEMENTATION
           EMPTY-WL-BUFFER-RELEASE
           IMPLEMENT-WL-BUFFER
           WL-BUFFER-SEND-DESTROY
           *WL-DATA-OFFER-INTERFACE*
           WL-DATA-OFFER-IMPLEMENTATION
           EMPTY-WL-DATA-OFFER-OFFER
           EMPTY-WL-DATA-OFFER-SOURCE-ACTIONS
           EMPTY-WL-DATA-OFFER-ACTION
           IMPLEMENT-WL-DATA-OFFER
           WL-DATA-OFFER-SEND-ACCEPT
           WL-DATA-OFFER-SEND-RECEIVE
           WL-DATA-OFFER-SEND-DESTROY
           WL-DATA-OFFER-SEND-FINISH
           WL-DATA-OFFER-SEND-SET-ACTIONS
           WL-DATA-OFFER-ERROR
           *WL-DATA-SOURCE-INTERFACE*
           WL-DATA-SOURCE-IMPLEMENTATION
           EMPTY-WL-DATA-SOURCE-TARGET
           EMPTY-WL-DATA-SOURCE-SEND
           EMPTY-WL-DATA-SOURCE-CANCELLED
           EMPTY-WL-DATA-SOURCE-DND-DROP-PERFORMED
           EMPTY-WL-DATA-SOURCE-DND-FINISHED
           EMPTY-WL-DATA-SOURCE-ACTION
           IMPLEMENT-WL-DATA-SOURCE
           WL-DATA-SOURCE-SEND-OFFER
           WL-DATA-SOURCE-SEND-DESTROY
           WL-DATA-SOURCE-SEND-SET-ACTIONS
           WL-DATA-SOURCE-ERROR
           *WL-DATA-DEVICE-INTERFACE*
           WL-DATA-DEVICE-IMPLEMENTATION
           EMPTY-WL-DATA-DEVICE-DATA-OFFER
           EMPTY-WL-DATA-DEVICE-ENTER
           EMPTY-WL-DATA-DEVICE-LEAVE
           EMPTY-WL-DATA-DEVICE-MOTION
           EMPTY-WL-DATA-DEVICE-DROP
           EMPTY-WL-DATA-DEVICE-SELECTION
           IMPLEMENT-WL-DATA-DEVICE
           WL-DATA-DEVICE-SEND-START-DRAG
           WL-DATA-DEVICE-SEND-SET-SELECTION
           WL-DATA-DEVICE-SEND-RELEASE
           WL-DATA-DEVICE-ERROR
           *WL-DATA-DEVICE-MANAGER-INTERFACE*
           WL-DATA-DEVICE-MANAGER-IMPLEMENTATION
           IMPLEMENT-WL-DATA-DEVICE-MANAGER
           WL-DATA-DEVICE-MANAGER-SEND-CREATE-DATA-SOURCE
           WL-DATA-DEVICE-MANAGER-SEND-GET-DATA-DEVICE
           WL-DATA-DEVICE-MANAGER-DND-ACTION
           *WL-SHELL-INTERFACE*
           WL-SHELL-IMPLEMENTATION
           IMPLEMENT-WL-SHELL
           WL-SHELL-SEND-GET-SHELL-SURFACE
           WL-SHELL-ERROR
           *WL-SHELL-SURFACE-INTERFACE*
           WL-SHELL-SURFACE-IMPLEMENTATION
           EMPTY-WL-SHELL-SURFACE-PING
           EMPTY-WL-SHELL-SURFACE-CONFIGURE
           EMPTY-WL-SHELL-SURFACE-POPUP-DONE
           IMPLEMENT-WL-SHELL-SURFACE
           WL-SHELL-SURFACE-SEND-PONG
           WL-SHELL-SURFACE-SEND-MOVE
           WL-SHELL-SURFACE-SEND-RESIZE
           WL-SHELL-SURFACE-SEND-SET-TOPLEVEL
           WL-SHELL-SURFACE-SEND-SET-TRANSIENT
           WL-SHELL-SURFACE-SEND-SET-FULLSCREEN
           WL-SHELL-SURFACE-SEND-SET-POPUP
           WL-SHELL-SURFACE-SEND-SET-MAXIMIZED
           WL-SHELL-SURFACE-SEND-SET-TITLE
           WL-SHELL-SURFACE-SEND-SET-CLASS
           WL-SHELL-SURFACE-RESIZE
           WL-SHELL-SURFACE-TRANSIENT
           WL-SHELL-SURFACE-FULLSCREEN-METHOD
           *WL-SURFACE-INTERFACE*
           WL-SURFACE-IMPLEMENTATION
           EMPTY-WL-SURFACE-ENTER
           EMPTY-WL-SURFACE-LEAVE
           IMPLEMENT-WL-SURFACE
           WL-SURFACE-SEND-DESTROY
           WL-SURFACE-SEND-ATTACH
           WL-SURFACE-SEND-DAMAGE
           WL-SURFACE-SEND-FRAME
           WL-SURFACE-SEND-SET-OPAQUE-REGION
           WL-SURFACE-SEND-SET-INPUT-REGION
           WL-SURFACE-SEND-COMMIT
           WL-SURFACE-SEND-SET-BUFFER-TRANSFORM
           WL-SURFACE-SEND-SET-BUFFER-SCALE
           WL-SURFACE-SEND-DAMAGE-BUFFER
           WL-SURFACE-ERROR
           *WL-SEAT-INTERFACE*
           WL-SEAT-IMPLEMENTATION
           EMPTY-WL-SEAT-CAPABILITIES
           EMPTY-WL-SEAT-NAME
           IMPLEMENT-WL-SEAT
           WL-SEAT-SEND-GET-POINTER
           WL-SEAT-SEND-GET-KEYBOARD
           WL-SEAT-SEND-GET-TOUCH
           WL-SEAT-SEND-RELEASE
           WL-SEAT-CAPABILITY
           *WL-POINTER-INTERFACE*
           WL-POINTER-IMPLEMENTATION
           EMPTY-WL-POINTER-ENTER
           EMPTY-WL-POINTER-LEAVE
           EMPTY-WL-POINTER-MOTION
           EMPTY-WL-POINTER-BUTTON
           EMPTY-WL-POINTER-AXIS
           EMPTY-WL-POINTER-FRAME
           EMPTY-WL-POINTER-AXIS-SOURCE
           EMPTY-WL-POINTER-AXIS-STOP
           EMPTY-WL-POINTER-AXIS-DISCRETE
           IMPLEMENT-WL-POINTER
           WL-POINTER-SEND-SET-CURSOR
           WL-POINTER-SEND-RELEASE
           WL-POINTER-ERROR
           WL-POINTER-BUTTON-STATE
           WL-POINTER-AXIS
           WL-POINTER-AXIS-SOURCE
           *WL-KEYBOARD-INTERFACE*
           WL-KEYBOARD-IMPLEMENTATION
           EMPTY-WL-KEYBOARD-KEYMAP
           EMPTY-WL-KEYBOARD-ENTER
           EMPTY-WL-KEYBOARD-LEAVE
           EMPTY-WL-KEYBOARD-KEY
           EMPTY-WL-KEYBOARD-MODIFIERS
           EMPTY-WL-KEYBOARD-REPEAT-INFO
           IMPLEMENT-WL-KEYBOARD
           WL-KEYBOARD-SEND-RELEASE
           WL-KEYBOARD-KEYMAP-FORMAT
           WL-KEYBOARD-KEY-STATE
           *WL-TOUCH-INTERFACE*
           WL-TOUCH-IMPLEMENTATION
           EMPTY-WL-TOUCH-DOWN
           EMPTY-WL-TOUCH-UP
           EMPTY-WL-TOUCH-MOTION
           EMPTY-WL-TOUCH-FRAME
           EMPTY-WL-TOUCH-CANCEL
           EMPTY-WL-TOUCH-SHAPE
           EMPTY-WL-TOUCH-ORIENTATION
           IMPLEMENT-WL-TOUCH
           WL-TOUCH-SEND-RELEASE
           *WL-OUTPUT-INTERFACE*
           WL-OUTPUT-IMPLEMENTATION
           EMPTY-WL-OUTPUT-GEOMETRY
           EMPTY-WL-OUTPUT-MODE
           EMPTY-WL-OUTPUT-DONE
           EMPTY-WL-OUTPUT-SCALE
           IMPLEMENT-WL-OUTPUT
           WL-OUTPUT-SEND-RELEASE
           WL-OUTPUT-SUBPIXEL
           WL-OUTPUT-TRANSFORM
           WL-OUTPUT-MODE
           *WL-REGION-INTERFACE*
           WL-REGION-IMPLEMENTATION
           IMPLEMENT-WL-REGION
           WL-REGION-SEND-DESTROY
           WL-REGION-SEND-ADD
           WL-REGION-SEND-SUBTRACT
           *WL-SUBCOMPOSITOR-INTERFACE*
           WL-SUBCOMPOSITOR-IMPLEMENTATION
           IMPLEMENT-WL-SUBCOMPOSITOR
           WL-SUBCOMPOSITOR-SEND-DESTROY
           WL-SUBCOMPOSITOR-SEND-GET-SUBSURFACE
           WL-SUBCOMPOSITOR-ERROR
           *WL-SUBSURFACE-INTERFACE*
           WL-SUBSURFACE-IMPLEMENTATION
           IMPLEMENT-WL-SUBSURFACE
           WL-SUBSURFACE-SEND-DESTROY
           WL-SUBSURFACE-SEND-SET-POSITION
           WL-SUBSURFACE-SEND-PLACE-ABOVE
           WL-SUBSURFACE-SEND-PLACE-BELOW
           WL-SUBSURFACE-SEND-SET-SYNC
           WL-SUBSURFACE-SEND-SET-DESYNC
           WL-SUBSURFACE-ERROR
           INITIALIZE-WAYLAND-CLIENT-INTERFACES))

(IN-PACKAGE :WAYLAND-CLIENT-PROTOCOL)

(CFFI:DEFINE-FOREIGN-LIBRARY GENERATE-BINDINGS::WAYLAND-CLIENT
  (T (:DEFAULT "libwayland-client")))

(CFFI:USE-FOREIGN-LIBRARY GENERATE-BINDINGS::WAYLAND-CLIENT)

(DEFPARAMETER *WL-DISPLAY-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_display_interface"))

(CFFI:DEFCSTRUCT WL-DISPLAY-IMPLEMENTATION
  (ERROR :POINTER)
  (DELETE-ID :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-DISPLAY-ERROR
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (OBJECT-ID :POINTER) (CODE :UINT32)
     (MESSAGE :STRING)))

(CFFI:DEFCALLBACK EMPTY-WL-DISPLAY-DELETE-ID
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (ID :UINT32)))

(DEFUN IMPLEMENT-WL-DISPLAY (&KEY (ERROR NIL) (DELETE-ID NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-DISPLAY-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DISPLAY-IMPLEMENTATION) 'ERROR)
            (IF ERROR
                ERROR
                (CFFI:GET-CALLBACK 'EMPTY-WL-DISPLAY-ERROR)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DISPLAY-IMPLEMENTATION)
                                   'DELETE-ID)
            (IF DELETE-ID
                DELETE-ID
                (CFFI:GET-CALLBACK 'EMPTY-WL-DISPLAY-DELETE-ID)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-DISPLAY-SEND-SYNC (WAYLAND-CLIENT-PROTOCOL::RESOURCE CALLBACK)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_display" :POINTER CALLBACK))

(DEFUN WL-DISPLAY-SEND-GET-REGISTRY
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE REGISTRY)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_display" :POINTER REGISTRY))

(CFFI:DEFCENUM WL-DISPLAY-ERROR
  (:INVALID-OBJECT 0)
  (:INVALID-METHOD 1)
  (:NO-MEMORY 2)
  (:IMPLEMENTATION 3))

(DEFPARAMETER *WL-REGISTRY-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_registry_interface"))

(CFFI:DEFCSTRUCT WL-REGISTRY-IMPLEMENTATION
  (GLOBAL :POINTER)
  (GLOBAL-REMOVE :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-REGISTRY-GLOBAL
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (NAME :UINT32) (INTERFACE :STRING)
     (VERSION :UINT32)))

(CFFI:DEFCALLBACK EMPTY-WL-REGISTRY-GLOBAL-REMOVE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (NAME :UINT32)))

(DEFUN IMPLEMENT-WL-REGISTRY (&KEY (GLOBAL NIL) (GLOBAL-REMOVE NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-REGISTRY-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-REGISTRY-IMPLEMENTATION)
                                   'GLOBAL)
            (IF GLOBAL
                GLOBAL
                (CFFI:GET-CALLBACK 'EMPTY-WL-REGISTRY-GLOBAL)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-REGISTRY-IMPLEMENTATION)
                                   'GLOBAL-REMOVE)
            (IF GLOBAL-REMOVE
                GLOBAL-REMOVE
                (CFFI:GET-CALLBACK 'EMPTY-WL-REGISTRY-GLOBAL-REMOVE)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-REGISTRY-SEND-BIND (WAYLAND-CLIENT-PROTOCOL::RESOURCE NAME ID)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_registry" :UINT32 NAME :POINTER ID))

(DEFPARAMETER *WL-CALLBACK-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_callback_interface"))

(CFFI:DEFCSTRUCT WL-CALLBACK-IMPLEMENTATION
  (DONE :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-CALLBACK-DONE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (CALLBACK-DATA :UINT32)))

(DEFUN IMPLEMENT-WL-CALLBACK (&KEY (DONE NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-CALLBACK-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-CALLBACK-IMPLEMENTATION) 'DONE)
            (IF DONE
                DONE
                (CFFI:GET-CALLBACK 'EMPTY-WL-CALLBACK-DONE)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFPARAMETER *WL-COMPOSITOR-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_compositor_interface"))

(CFFI:DEFCSTRUCT WL-COMPOSITOR-IMPLEMENTATION)

(DEFUN IMPLEMENT-WL-COMPOSITOR (&KEY)
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-COMPOSITOR-IMPLEMENTATION))))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-COMPOSITOR-SEND-CREATE-SURFACE (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_compositor" :POINTER ID))

(DEFUN WL-COMPOSITOR-SEND-CREATE-REGION (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_compositor" :POINTER ID))

(DEFPARAMETER *WL-SHM-POOL-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_shm_pool_interface"))

(CFFI:DEFCSTRUCT WL-SHM-POOL-IMPLEMENTATION)

(DEFUN IMPLEMENT-WL-SHM-POOL (&KEY)
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-SHM-POOL-IMPLEMENTATION))))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-SHM-POOL-SEND-CREATE-BUFFER
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID OFFSET WIDTH HEIGHT STRIDE FORMAT)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_shm_pool" :POINTER ID :INT32 OFFSET
   :INT32 WIDTH :INT32 HEIGHT :INT32 STRIDE :UINT32 FORMAT))

(DEFUN WL-SHM-POOL-SEND-DESTROY (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_shm_pool"))

(DEFUN WL-SHM-POOL-SEND-RESIZE (WAYLAND-CLIENT-PROTOCOL::RESOURCE SIZE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 2 "wl_shm_pool" :INT32 SIZE))

(DEFPARAMETER *WL-SHM-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_shm_interface"))

(CFFI:DEFCSTRUCT WL-SHM-IMPLEMENTATION
  (FORMAT :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-SHM-FORMAT
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (FORMAT :UINT32)))

(DEFUN IMPLEMENT-WL-SHM (&KEY (FORMAT NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-SHM-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-SHM-IMPLEMENTATION) 'FORMAT)
            (IF FORMAT
                FORMAT
                (CFFI:GET-CALLBACK 'EMPTY-WL-SHM-FORMAT)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-SHM-SEND-CREATE-POOL (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID FD SIZE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_shm" :POINTER ID :INT32 FD :INT32
   SIZE))

(CFFI:DEFCENUM WL-SHM-ERROR
  (:INVALID-FORMAT 0)
  (:INVALID-STRIDE 1)
  (:INVALID-FD 2))

(CFFI:DEFBITFIELD WL-SHM-FORMAT
  (:ARGB8888 0)
  (:XRGB8888 1)
  (:C8 538982467)
  (:RGB332 943867730)
  (:BGR233 944916290)
  (:XRGB4444 842093144)
  (:XBGR4444 842089048)
  (:RGBX4444 842094674)
  (:BGRX4444 842094658)
  (:ARGB4444 842093121)
  (:ABGR4444 842089025)
  (:RGBA4444 842088786)
  (:BGRA4444 842088770)
  (:XRGB1555 892424792)
  (:XBGR1555 892420696)
  (:RGBX5551 892426322)
  (:BGRX5551 892426306)
  (:ARGB1555 892424769)
  (:ABGR1555 892420673)
  (:RGBA5551 892420434)
  (:BGRA5551 892420418)
  (:RGB565 909199186)
  (:BGR565 909199170)
  (:RGB888 875710290)
  (:BGR888 875710274)
  (:XBGR8888 875709016)
  (:RGBX8888 875714642)
  (:BGRX8888 875714626)
  (:ABGR8888 875708993)
  (:RGBA8888 875708754)
  (:BGRA8888 875708738)
  (:XRGB2101010 808669784)
  (:XBGR2101010 808665688)
  (:RGBX1010102 808671314)
  (:BGRX1010102 808671298)
  (:ARGB2101010 808669761)
  (:ABGR2101010 808665665)
  (:RGBA1010102 808665426)
  (:BGRA1010102 808665410)
  (:YUYV 1448695129)
  (:YVYU 1431918169)
  (:UYVY 1498831189)
  (:VYUY 1498765654)
  (:AYUV 1448433985)
  (:NV12 842094158)
  (:NV21 825382478)
  (:NV16 909203022)
  (:NV61 825644622)
  (:YUV410 961959257)
  (:YVU410 961893977)
  (:YUV411 825316697)
  (:YVU411 825316953)
  (:YUV420 842093913)
  (:YVU420 842094169)
  (:YUV422 909202777)
  (:YVU422 909203033)
  (:YUV444 875713881)
  (:YVU444 875714137)
  (:R8 538982482)
  (:R16 540422482)
  (:RG88 943212370)
  (:GR88 943215175)
  (:RG1616 842221394)
  (:GR1616 842224199)
  (:XRGB16161616F 1211388504)
  (:XBGR16161616F 1211384408)
  (:ARGB16161616F 1211388481)
  (:ABGR16161616F 1211384385)
  (:XYUV8888 1448434008)
  (:VUY888 875713878)
  (:VUY101010 808670550)
  (:Y210 808530521)
  (:Y212 842084953)
  (:Y216 909193817)
  (:Y410 808531033)
  (:Y412 842085465)
  (:Y416 909194329)
  (:XVYU2101010 808670808)
  (:XVYU12-16161616 909334104)
  (:XVYU16161616 942954072)
  (:Y0L0 810299481)
  (:X0L0 810299480)
  (:Y0L2 843853913)
  (:X0L2 843853912)
  (:YUV420-8BIT 942691673)
  (:YUV420-10BIT 808539481)
  (:XRGB8888-A8 943805016)
  (:XBGR8888-A8 943800920)
  (:RGBX8888-A8 943806546)
  (:BGRX8888-A8 943806530)
  (:RGB888-A8 943798354)
  (:BGR888-A8 943798338)
  (:RGB565-A8 943797586)
  (:BGR565-A8 943797570)
  (:NV24 875714126)
  (:NV42 842290766)
  (:P210 808530512)
  (:P010 808530000)
  (:P012 842084432)
  (:P016 909193296))

(DEFPARAMETER *WL-BUFFER-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_buffer_interface"))

(CFFI:DEFCSTRUCT WL-BUFFER-IMPLEMENTATION
  (RELEASE :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-BUFFER-RELEASE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(DEFUN IMPLEMENT-WL-BUFFER (&KEY (RELEASE NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-BUFFER-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-BUFFER-IMPLEMENTATION)
                                   'RELEASE)
            (IF RELEASE
                RELEASE
                (CFFI:GET-CALLBACK 'EMPTY-WL-BUFFER-RELEASE)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-BUFFER-SEND-DESTROY (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_buffer"))

(DEFPARAMETER *WL-DATA-OFFER-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_data_offer_interface"))

(CFFI:DEFCSTRUCT WL-DATA-OFFER-IMPLEMENTATION
  (OFFER :POINTER)
  (SOURCE-ACTIONS :POINTER)
  (ACTION :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-OFFER-OFFER
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (MIME-TYPE :STRING)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-OFFER-SOURCE-ACTIONS
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SOURCE-ACTIONS :UINT32)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-OFFER-ACTION
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (DND-ACTION :UINT32)))

(DEFUN IMPLEMENT-WL-DATA-OFFER
       (&KEY (OFFER NIL) (SOURCE-ACTIONS NIL) (ACTION NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-DATA-OFFER-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-OFFER-IMPLEMENTATION)
                                   'OFFER)
            (IF OFFER
                OFFER
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-OFFER-OFFER)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-OFFER-IMPLEMENTATION)
                                   'SOURCE-ACTIONS)
            (IF SOURCE-ACTIONS
                SOURCE-ACTIONS
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-OFFER-SOURCE-ACTIONS)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-OFFER-IMPLEMENTATION)
                                   'ACTION)
            (IF ACTION
                ACTION
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-OFFER-ACTION)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-DATA-OFFER-SEND-ACCEPT
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE SERIAL MIME-TYPE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_data_offer" :UINT32 SERIAL :STRING
   MIME-TYPE))

(DEFUN WL-DATA-OFFER-SEND-RECEIVE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE MIME-TYPE FD)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_data_offer" :STRING MIME-TYPE :INT32
   FD))

(DEFUN WL-DATA-OFFER-SEND-DESTROY (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 2 "wl_data_offer"))

(DEFUN WL-DATA-OFFER-SEND-FINISH (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 3 "wl_data_offer"))

(DEFUN WL-DATA-OFFER-SEND-SET-ACTIONS
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE DND-ACTIONS PREFERRED-ACTION)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 4 "wl_data_offer" :UINT32 DND-ACTIONS
   :UINT32 PREFERRED-ACTION))

(CFFI:DEFCENUM WL-DATA-OFFER-ERROR
  (:INVALID-FINISH 0)
  (:INVALID-ACTION-MASK 1)
  (:INVALID-ACTION 2)
  (:INVALID-OFFER 3))

(DEFPARAMETER *WL-DATA-SOURCE-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_data_source_interface"))

(CFFI:DEFCSTRUCT WL-DATA-SOURCE-IMPLEMENTATION
  (TARGET :POINTER)
  (SEND :POINTER)
  (CANCELLED :POINTER)
  (DND-DROP-PERFORMED :POINTER)
  (DND-FINISHED :POINTER)
  (ACTION :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-SOURCE-TARGET
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (MIME-TYPE :STRING)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-SOURCE-SEND
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (MIME-TYPE :STRING) (FD :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-SOURCE-CANCELLED
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-SOURCE-DND-DROP-PERFORMED
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-SOURCE-DND-FINISHED
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-SOURCE-ACTION
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (DND-ACTION :UINT32)))

(DEFUN IMPLEMENT-WL-DATA-SOURCE
       (
        &KEY (TARGET NIL) (SEND NIL) (CANCELLED NIL) (DND-DROP-PERFORMED NIL)
        (DND-FINISHED NIL) (ACTION NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION)
                                   'TARGET)
            (IF TARGET
                TARGET
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-SOURCE-TARGET)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION)
                                   'SEND)
            (IF SEND
                SEND
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-SOURCE-SEND)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION)
                                   'CANCELLED)
            (IF CANCELLED
                CANCELLED
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-SOURCE-CANCELLED)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION)
                                   'DND-DROP-PERFORMED)
            (IF DND-DROP-PERFORMED
                DND-DROP-PERFORMED
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-SOURCE-DND-DROP-PERFORMED)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION)
                                   'DND-FINISHED)
            (IF DND-FINISHED
                DND-FINISHED
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-SOURCE-DND-FINISHED)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-SOURCE-IMPLEMENTATION)
                                   'ACTION)
            (IF ACTION
                ACTION
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-SOURCE-ACTION)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-DATA-SOURCE-SEND-OFFER (WAYLAND-CLIENT-PROTOCOL::RESOURCE MIME-TYPE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_data_source" :STRING MIME-TYPE))

(DEFUN WL-DATA-SOURCE-SEND-DESTROY (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_data_source"))

(DEFUN WL-DATA-SOURCE-SEND-SET-ACTIONS
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE DND-ACTIONS)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 2 "wl_data_source" :UINT32 DND-ACTIONS))

(CFFI:DEFCENUM WL-DATA-SOURCE-ERROR
  (:INVALID-ACTION-MASK 0)
  (:INVALID-SOURCE 1))

(DEFPARAMETER *WL-DATA-DEVICE-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_data_device_interface"))

(CFFI:DEFCSTRUCT WL-DATA-DEVICE-IMPLEMENTATION
  (DATA-OFFER :POINTER)
  (ENTER :POINTER)
  (LEAVE :POINTER)
  (MOTION :POINTER)
  (DROP :POINTER)
  (SELECTION :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-DEVICE-DATA-OFFER
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (ID :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-DEVICE-ENTER
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32) (SURFACE :POINTER)
     (X :INT32) (Y :INT32) (ID :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-DEVICE-LEAVE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-DEVICE-MOTION
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (TIME :UINT32) (X :INT32)
     (Y :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-DEVICE-DROP
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-DATA-DEVICE-SELECTION
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (ID :POINTER)))

(DEFUN IMPLEMENT-WL-DATA-DEVICE
       (
        &KEY (DATA-OFFER NIL) (ENTER NIL) (LEAVE NIL) (MOTION NIL) (DROP NIL)
        (SELECTION NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION)
                                   'DATA-OFFER)
            (IF DATA-OFFER
                DATA-OFFER
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-DEVICE-DATA-OFFER)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION)
                                   'ENTER)
            (IF ENTER
                ENTER
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-DEVICE-ENTER)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION)
                                   'LEAVE)
            (IF LEAVE
                LEAVE
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-DEVICE-LEAVE)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION)
                                   'MOTION)
            (IF MOTION
                MOTION
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-DEVICE-MOTION)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION)
                                   'DROP)
            (IF DROP
                DROP
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-DEVICE-DROP)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-DATA-DEVICE-IMPLEMENTATION)
                                   'SELECTION)
            (IF SELECTION
                SELECTION
                (CFFI:GET-CALLBACK 'EMPTY-WL-DATA-DEVICE-SELECTION)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-DATA-DEVICE-SEND-START-DRAG
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE SOURCE ORIGIN ICON SERIAL)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_data_device" :POINTER SOURCE
   :POINTER ORIGIN :POINTER ICON :UINT32 SERIAL))

(DEFUN WL-DATA-DEVICE-SEND-SET-SELECTION
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE SOURCE SERIAL)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_data_device" :POINTER SOURCE :UINT32
   SERIAL))

(DEFUN WL-DATA-DEVICE-SEND-RELEASE (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 2 "wl_data_device"))

(CFFI:DEFCENUM WL-DATA-DEVICE-ERROR
  (:ROLE 0))

(DEFPARAMETER *WL-DATA-DEVICE-MANAGER-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_data_device_manager_interface"))

(CFFI:DEFCSTRUCT WL-DATA-DEVICE-MANAGER-IMPLEMENTATION)

(DEFUN IMPLEMENT-WL-DATA-DEVICE-MANAGER (&KEY)
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-DATA-DEVICE-MANAGER-IMPLEMENTATION))))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-DATA-DEVICE-MANAGER-SEND-CREATE-DATA-SOURCE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_data_device_manager" :POINTER ID))

(DEFUN WL-DATA-DEVICE-MANAGER-SEND-GET-DATA-DEVICE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID SEAT)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_data_device_manager" :POINTER ID
   :POINTER SEAT))

(CFFI:DEFCENUM WL-DATA-DEVICE-MANAGER-DND-ACTION
  (:NONE 0)
  (:COPY 1)
  (:MOVE 2)
  (:ASK 4))

(DEFPARAMETER *WL-SHELL-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_shell_interface"))

(CFFI:DEFCSTRUCT WL-SHELL-IMPLEMENTATION)

(DEFUN IMPLEMENT-WL-SHELL (&KEY)
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-SHELL-IMPLEMENTATION))))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-SHELL-SEND-GET-SHELL-SURFACE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID SURFACE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_shell" :POINTER ID :POINTER SURFACE))

(CFFI:DEFCENUM WL-SHELL-ERROR
  (:ROLE 0))

(DEFPARAMETER *WL-SHELL-SURFACE-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_shell_surface_interface"))

(CFFI:DEFCSTRUCT WL-SHELL-SURFACE-IMPLEMENTATION
  (PING :POINTER)
  (CONFIGURE :POINTER)
  (POPUP-DONE :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-SHELL-SURFACE-PING
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32)))

(CFFI:DEFCALLBACK EMPTY-WL-SHELL-SURFACE-CONFIGURE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (EDGES :UINT32) (WIDTH :INT32)
     (HEIGHT :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-SHELL-SURFACE-POPUP-DONE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(DEFUN IMPLEMENT-WL-SHELL-SURFACE
       (&KEY (PING NIL) (CONFIGURE NIL) (POPUP-DONE NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION)
                                   'PING)
            (IF PING
                PING
                (CFFI:GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-PING)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION)
                                   'CONFIGURE)
            (IF CONFIGURE
                CONFIGURE
                (CFFI:GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-CONFIGURE)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-SHELL-SURFACE-IMPLEMENTATION)
                                   'POPUP-DONE)
            (IF POPUP-DONE
                POPUP-DONE
                (CFFI:GET-CALLBACK 'EMPTY-WL-SHELL-SURFACE-POPUP-DONE)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-SHELL-SURFACE-SEND-PONG (WAYLAND-CLIENT-PROTOCOL::RESOURCE SERIAL)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_shell_surface" :UINT32 SERIAL))

(DEFUN WL-SHELL-SURFACE-SEND-MOVE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE SEAT SERIAL)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_shell_surface" :POINTER SEAT :UINT32
   SERIAL))

(DEFUN WL-SHELL-SURFACE-SEND-RESIZE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE SEAT SERIAL EDGES)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 2 "wl_shell_surface" :POINTER SEAT :UINT32
   SERIAL :UINT32 EDGES))

(DEFUN WL-SHELL-SURFACE-SEND-SET-TOPLEVEL (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 3 "wl_shell_surface"))

(DEFUN WL-SHELL-SURFACE-SEND-SET-TRANSIENT
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE PARENT X Y FLAGS)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 4 "wl_shell_surface" :POINTER PARENT
   :INT32 X :INT32 Y :UINT32 FLAGS))

(DEFUN WL-SHELL-SURFACE-SEND-SET-FULLSCREEN
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE METHOD FRAMERATE OUTPUT)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 5 "wl_shell_surface" :UINT32 METHOD
   :UINT32 FRAMERATE :POINTER OUTPUT))

(DEFUN WL-SHELL-SURFACE-SEND-SET-POPUP
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE SEAT SERIAL PARENT X Y FLAGS)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 6 "wl_shell_surface" :POINTER SEAT :UINT32
   SERIAL :POINTER PARENT :INT32 X :INT32 Y :UINT32 FLAGS))

(DEFUN WL-SHELL-SURFACE-SEND-SET-MAXIMIZED
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE OUTPUT)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 7 "wl_shell_surface" :POINTER OUTPUT))

(DEFUN WL-SHELL-SURFACE-SEND-SET-TITLE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE TITLE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 8 "wl_shell_surface" :STRING TITLE))

(DEFUN WL-SHELL-SURFACE-SEND-SET-CLASS
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE CLASS-)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 9 "wl_shell_surface" :STRING CLASS-))

(CFFI:DEFCENUM WL-SHELL-SURFACE-RESIZE
  (:NONE 0)
  (:TOP 1)
  (:BOTTOM 2)
  (:LEFT 4)
  (:TOP-LEFT 5)
  (:BOTTOM-LEFT 6)
  (:RIGHT 8)
  (:TOP-RIGHT 9)
  (:BOTTOM-RIGHT 10))

(CFFI:DEFBITFIELD WL-SHELL-SURFACE-TRANSIENT
  (:INACTIVE 1))

(CFFI:DEFCENUM WL-SHELL-SURFACE-FULLSCREEN-METHOD
  (:DEFAULT 0)
  (:SCALE 1)
  (:DRIVER 2)
  (:FILL 3))

(DEFPARAMETER *WL-SURFACE-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_surface_interface"))

(CFFI:DEFCSTRUCT WL-SURFACE-IMPLEMENTATION
  (ENTER :POINTER)
  (LEAVE :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-SURFACE-ENTER
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (OUTPUT :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-SURFACE-LEAVE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (OUTPUT :POINTER)))

(DEFUN IMPLEMENT-WL-SURFACE (&KEY (ENTER NIL) (LEAVE NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-SURFACE-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'ENTER)
            (IF ENTER
                ENTER
                (CFFI:GET-CALLBACK 'EMPTY-WL-SURFACE-ENTER)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-SURFACE-IMPLEMENTATION) 'LEAVE)
            (IF LEAVE
                LEAVE
                (CFFI:GET-CALLBACK 'EMPTY-WL-SURFACE-LEAVE)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-SURFACE-SEND-DESTROY (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_surface"))

(DEFUN WL-SURFACE-SEND-ATTACH (WAYLAND-CLIENT-PROTOCOL::RESOURCE BUFFER X Y)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_surface" :POINTER BUFFER :INT32 X
   :INT32 Y))

(DEFUN WL-SURFACE-SEND-DAMAGE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE X Y WIDTH HEIGHT)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 2 "wl_surface" :INT32 X :INT32 Y :INT32
   WIDTH :INT32 HEIGHT))

(DEFUN WL-SURFACE-SEND-FRAME (WAYLAND-CLIENT-PROTOCOL::RESOURCE CALLBACK)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 3 "wl_surface" :POINTER CALLBACK))

(DEFUN WL-SURFACE-SEND-SET-OPAQUE-REGION
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE REGION)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 4 "wl_surface" :POINTER REGION))

(DEFUN WL-SURFACE-SEND-SET-INPUT-REGION
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE REGION)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 5 "wl_surface" :POINTER REGION))

(DEFUN WL-SURFACE-SEND-COMMIT (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 6 "wl_surface"))

(DEFUN WL-SURFACE-SEND-SET-BUFFER-TRANSFORM
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE TRANSFORM)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 7 "wl_surface" :INT32 TRANSFORM))

(DEFUN WL-SURFACE-SEND-SET-BUFFER-SCALE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE SCALE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 8 "wl_surface" :INT32 SCALE))

(DEFUN WL-SURFACE-SEND-DAMAGE-BUFFER
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE X Y WIDTH HEIGHT)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 9 "wl_surface" :INT32 X :INT32 Y :INT32
   WIDTH :INT32 HEIGHT))

(CFFI:DEFCENUM WL-SURFACE-ERROR
  (:INVALID-SCALE 0)
  (:INVALID-TRANSFORM 1))

(DEFPARAMETER *WL-SEAT-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_seat_interface"))

(CFFI:DEFCSTRUCT WL-SEAT-IMPLEMENTATION
  (CAPABILITIES :POINTER)
  (NAME :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-SEAT-CAPABILITIES
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (CAPABILITIES :UINT32)))

(CFFI:DEFCALLBACK EMPTY-WL-SEAT-NAME
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (NAME :STRING)))

(DEFUN IMPLEMENT-WL-SEAT (&KEY (CAPABILITIES NIL) (NAME NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-SEAT-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-SEAT-IMPLEMENTATION)
                                   'CAPABILITIES)
            (IF CAPABILITIES
                CAPABILITIES
                (CFFI:GET-CALLBACK 'EMPTY-WL-SEAT-CAPABILITIES)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-SEAT-IMPLEMENTATION) 'NAME)
            (IF NAME
                NAME
                (CFFI:GET-CALLBACK 'EMPTY-WL-SEAT-NAME)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-SEAT-SEND-GET-POINTER (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_seat" :POINTER ID))

(DEFUN WL-SEAT-SEND-GET-KEYBOARD (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_seat" :POINTER ID))

(DEFUN WL-SEAT-SEND-GET-TOUCH (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 2 "wl_seat" :POINTER ID))

(DEFUN WL-SEAT-SEND-RELEASE (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 3 "wl_seat"))

(CFFI:DEFCENUM WL-SEAT-CAPABILITY
  (:POINTER 1)
  (:KEYBOARD 2)
  (:TOUCH 4))

(DEFPARAMETER *WL-POINTER-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_pointer_interface"))

(CFFI:DEFCSTRUCT WL-POINTER-IMPLEMENTATION
  (ENTER :POINTER)
  (LEAVE :POINTER)
  (MOTION :POINTER)
  (BUTTON :POINTER)
  (AXIS :POINTER)
  (FRAME :POINTER)
  (AXIS-SOURCE :POINTER)
  (AXIS-STOP :POINTER)
  (AXIS-DISCRETE :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-POINTER-ENTER
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32) (SURFACE :POINTER)
     (SURFACE-X :INT32) (SURFACE-Y :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-POINTER-LEAVE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32)
     (SURFACE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-POINTER-MOTION
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (TIME :UINT32) (SURFACE-X :INT32)
     (SURFACE-Y :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-POINTER-BUTTON
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32) (TIME :UINT32)
     (BUTTON :UINT32) (STATE :UINT32)))

(CFFI:DEFCALLBACK EMPTY-WL-POINTER-AXIS
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (TIME :UINT32) (AXIS :UINT32)
     (VALUE :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-POINTER-FRAME
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-POINTER-AXIS-SOURCE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (AXIS-SOURCE :UINT32)))

(CFFI:DEFCALLBACK EMPTY-WL-POINTER-AXIS-STOP
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (TIME :UINT32) (AXIS :UINT32)))

(CFFI:DEFCALLBACK EMPTY-WL-POINTER-AXIS-DISCRETE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (AXIS :UINT32) (DISCRETE :INT32)))

(DEFUN IMPLEMENT-WL-POINTER
       (
        &KEY (ENTER NIL) (LEAVE NIL) (MOTION NIL) (BUTTON NIL) (AXIS NIL)
        (FRAME NIL) (AXIS-SOURCE NIL) (AXIS-STOP NIL) (AXIS-DISCRETE NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-POINTER-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-POINTER-IMPLEMENTATION) 'ENTER)
            (IF ENTER
                ENTER
                (CFFI:GET-CALLBACK 'EMPTY-WL-POINTER-ENTER)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-POINTER-IMPLEMENTATION) 'LEAVE)
            (IF LEAVE
                LEAVE
                (CFFI:GET-CALLBACK 'EMPTY-WL-POINTER-LEAVE)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-POINTER-IMPLEMENTATION)
                                   'MOTION)
            (IF MOTION
                MOTION
                (CFFI:GET-CALLBACK 'EMPTY-WL-POINTER-MOTION)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-POINTER-IMPLEMENTATION)
                                   'BUTTON)
            (IF BUTTON
                BUTTON
                (CFFI:GET-CALLBACK 'EMPTY-WL-POINTER-BUTTON)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-POINTER-IMPLEMENTATION) 'AXIS)
            (IF AXIS
                AXIS
                (CFFI:GET-CALLBACK 'EMPTY-WL-POINTER-AXIS)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-POINTER-IMPLEMENTATION) 'FRAME)
            (IF FRAME
                FRAME
                (CFFI:GET-CALLBACK 'EMPTY-WL-POINTER-FRAME)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-POINTER-IMPLEMENTATION)
                                   'AXIS-SOURCE)
            (IF AXIS-SOURCE
                AXIS-SOURCE
                (CFFI:GET-CALLBACK 'EMPTY-WL-POINTER-AXIS-SOURCE)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-POINTER-IMPLEMENTATION)
                                   'AXIS-STOP)
            (IF AXIS-STOP
                AXIS-STOP
                (CFFI:GET-CALLBACK 'EMPTY-WL-POINTER-AXIS-STOP)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-POINTER-IMPLEMENTATION)
                                   'AXIS-DISCRETE)
            (IF AXIS-DISCRETE
                AXIS-DISCRETE
                (CFFI:GET-CALLBACK 'EMPTY-WL-POINTER-AXIS-DISCRETE)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-POINTER-SEND-SET-CURSOR
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE SERIAL SURFACE HOTSPOT-X HOTSPOT-Y)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_pointer" :UINT32 SERIAL :POINTER
   SURFACE :INT32 HOTSPOT-X :INT32 HOTSPOT-Y))

(DEFUN WL-POINTER-SEND-RELEASE (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_pointer"))

(CFFI:DEFCENUM WL-POINTER-ERROR
  (:ROLE 0))

(CFFI:DEFCENUM WL-POINTER-BUTTON-STATE
  (:RELEASED 0)
  (:PRESSED 1))

(CFFI:DEFCENUM WL-POINTER-AXIS
  (:VERTICAL-SCROLL 0)
  (:HORIZONTAL-SCROLL 1))

(CFFI:DEFCENUM WL-POINTER-AXIS-SOURCE
  (:WHEEL 0)
  (:FINGER 1)
  (:CONTINUOUS 2)
  (:WHEEL-TILT 3))

(DEFPARAMETER *WL-KEYBOARD-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_keyboard_interface"))

(CFFI:DEFCSTRUCT WL-KEYBOARD-IMPLEMENTATION
  (KEYMAP :POINTER)
  (ENTER :POINTER)
  (LEAVE :POINTER)
  (KEY :POINTER)
  (MODIFIERS :POINTER)
  (REPEAT-INFO :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-KEYBOARD-KEYMAP
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (FORMAT :UINT32) (FD :INT32)
     (SIZE :UINT32)))

(CFFI:DEFCALLBACK EMPTY-WL-KEYBOARD-ENTER
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32) (SURFACE :POINTER)
     (KEYS :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-KEYBOARD-LEAVE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32)
     (SURFACE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-KEYBOARD-KEY
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32) (TIME :UINT32)
     (KEY :UINT32) (STATE :UINT32)))

(CFFI:DEFCALLBACK EMPTY-WL-KEYBOARD-MODIFIERS
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32)
     (MODS-DEPRESSED :UINT32) (MODS-LATCHED :UINT32) (MODS-LOCKED :UINT32)
     (GROUP :UINT32)))

(CFFI:DEFCALLBACK EMPTY-WL-KEYBOARD-REPEAT-INFO
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (RATE :INT32) (DELAY :INT32)))

(DEFUN IMPLEMENT-WL-KEYBOARD
       (
        &KEY (KEYMAP NIL) (ENTER NIL) (LEAVE NIL) (KEY NIL) (MODIFIERS NIL)
        (REPEAT-INFO NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-KEYBOARD-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-KEYBOARD-IMPLEMENTATION)
                                   'KEYMAP)
            (IF KEYMAP
                KEYMAP
                (CFFI:GET-CALLBACK 'EMPTY-WL-KEYBOARD-KEYMAP)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-KEYBOARD-IMPLEMENTATION)
                                   'ENTER)
            (IF ENTER
                ENTER
                (CFFI:GET-CALLBACK 'EMPTY-WL-KEYBOARD-ENTER)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-KEYBOARD-IMPLEMENTATION)
                                   'LEAVE)
            (IF LEAVE
                LEAVE
                (CFFI:GET-CALLBACK 'EMPTY-WL-KEYBOARD-LEAVE)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-KEYBOARD-IMPLEMENTATION) 'KEY)
            (IF KEY
                KEY
                (CFFI:GET-CALLBACK 'EMPTY-WL-KEYBOARD-KEY)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-KEYBOARD-IMPLEMENTATION)
                                   'MODIFIERS)
            (IF MODIFIERS
                MODIFIERS
                (CFFI:GET-CALLBACK 'EMPTY-WL-KEYBOARD-MODIFIERS)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-KEYBOARD-IMPLEMENTATION)
                                   'REPEAT-INFO)
            (IF REPEAT-INFO
                REPEAT-INFO
                (CFFI:GET-CALLBACK 'EMPTY-WL-KEYBOARD-REPEAT-INFO)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-KEYBOARD-SEND-RELEASE (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_keyboard"))

(CFFI:DEFCENUM WL-KEYBOARD-KEYMAP-FORMAT
  (:NO-KEYMAP 0)
  (:XKB-V1 1))

(CFFI:DEFCENUM WL-KEYBOARD-KEY-STATE
  (:RELEASED 0)
  (:PRESSED 1))

(DEFPARAMETER *WL-TOUCH-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_touch_interface"))

(CFFI:DEFCSTRUCT WL-TOUCH-IMPLEMENTATION
  (DOWN :POINTER)
  (UP :POINTER)
  (MOTION :POINTER)
  (FRAME :POINTER)
  (CANCEL :POINTER)
  (SHAPE :POINTER)
  (ORIENTATION :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-TOUCH-DOWN
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32) (TIME :UINT32)
     (SURFACE :POINTER) (ID :INT32) (X :INT32) (Y :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-TOUCH-UP
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (SERIAL :UINT32) (TIME :UINT32)
     (ID :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-TOUCH-MOTION
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (TIME :UINT32) (ID :INT32)
     (X :INT32) (Y :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-TOUCH-FRAME
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-TOUCH-CANCEL
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-TOUCH-SHAPE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (ID :INT32) (MAJOR :INT32)
     (MINOR :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-TOUCH-ORIENTATION
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (ID :INT32) (ORIENTATION :INT32)))

(DEFUN IMPLEMENT-WL-TOUCH
       (
        &KEY (DOWN NIL) (UP NIL) (MOTION NIL) (FRAME NIL) (CANCEL NIL)
        (SHAPE NIL) (ORIENTATION NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-TOUCH-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-TOUCH-IMPLEMENTATION) 'DOWN)
            (IF DOWN
                DOWN
                (CFFI:GET-CALLBACK 'EMPTY-WL-TOUCH-DOWN)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-TOUCH-IMPLEMENTATION) 'UP)
            (IF UP
                UP
                (CFFI:GET-CALLBACK 'EMPTY-WL-TOUCH-UP)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-TOUCH-IMPLEMENTATION) 'MOTION)
            (IF MOTION
                MOTION
                (CFFI:GET-CALLBACK 'EMPTY-WL-TOUCH-MOTION)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-TOUCH-IMPLEMENTATION) 'FRAME)
            (IF FRAME
                FRAME
                (CFFI:GET-CALLBACK 'EMPTY-WL-TOUCH-FRAME)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-TOUCH-IMPLEMENTATION) 'CANCEL)
            (IF CANCEL
                CANCEL
                (CFFI:GET-CALLBACK 'EMPTY-WL-TOUCH-CANCEL)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-TOUCH-IMPLEMENTATION) 'SHAPE)
            (IF SHAPE
                SHAPE
                (CFFI:GET-CALLBACK 'EMPTY-WL-TOUCH-SHAPE)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-TOUCH-IMPLEMENTATION)
                                   'ORIENTATION)
            (IF ORIENTATION
                ORIENTATION
                (CFFI:GET-CALLBACK 'EMPTY-WL-TOUCH-ORIENTATION)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-TOUCH-SEND-RELEASE (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_touch"))

(DEFPARAMETER *WL-OUTPUT-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_output_interface"))

(CFFI:DEFCSTRUCT WL-OUTPUT-IMPLEMENTATION
  (GEOMETRY :POINTER)
  (MODE :POINTER)
  (DONE :POINTER)
  (SCALE :POINTER))

(CFFI:DEFCALLBACK EMPTY-WL-OUTPUT-GEOMETRY
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (X :INT32) (Y :INT32)
     (PHYSICAL-WIDTH :INT32) (PHYSICAL-HEIGHT :INT32) (SUBPIXEL :INT32)
     (MAKE :STRING) (MODEL :STRING) (TRANSFORM :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-OUTPUT-MODE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (FLAGS :UINT32) (WIDTH :INT32)
     (HEIGHT :INT32) (REFRESH :INT32)))

(CFFI:DEFCALLBACK EMPTY-WL-OUTPUT-DONE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER)))

(CFFI:DEFCALLBACK EMPTY-WL-OUTPUT-SCALE
    :VOID
    ((GENERATE-BINDINGS::CLIENT :POINTER)
     (GENERATE-BINDINGS::RESOURCE :POINTER) (FACTOR :INT32)))

(DEFUN IMPLEMENT-WL-OUTPUT
       (&KEY (GEOMETRY NIL) (MODE NIL) (DONE NIL) (SCALE NIL))
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-OUTPUT-IMPLEMENTATION))))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-OUTPUT-IMPLEMENTATION)
                                   'GEOMETRY)
            (IF GEOMETRY
                GEOMETRY
                (CFFI:GET-CALLBACK 'EMPTY-WL-OUTPUT-GEOMETRY)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-OUTPUT-IMPLEMENTATION) 'MODE)
            (IF MODE
                MODE
                (CFFI:GET-CALLBACK 'EMPTY-WL-OUTPUT-MODE)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-OUTPUT-IMPLEMENTATION) 'DONE)
            (IF DONE
                DONE
                (CFFI:GET-CALLBACK 'EMPTY-WL-OUTPUT-DONE)))
    (SETF (CFFI:FOREIGN-SLOT-VALUE GENERATE-BINDINGS::IMPLEMENTATION
                                   '(:STRUCT WL-OUTPUT-IMPLEMENTATION) 'SCALE)
            (IF SCALE
                SCALE
                (CFFI:GET-CALLBACK 'EMPTY-WL-OUTPUT-SCALE)))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-OUTPUT-SEND-RELEASE (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_output"))

(CFFI:DEFCENUM WL-OUTPUT-SUBPIXEL
  (:UNKNOWN 0)
  (:NONE 1)
  (:HORIZONTAL-RGB 2)
  (:HORIZONTAL-BGR 3)
  (:VERTICAL-RGB 4)
  (:VERTICAL-BGR 5))

(CFFI:DEFCENUM WL-OUTPUT-TRANSFORM
  (:NORMAL 0)
  (:|90| 1)
  (:|180| 2)
  (:|270| 3)
  (:FLIPPED 4)
  (:FLIPPED-90 5)
  (:FLIPPED-180 6)
  (:FLIPPED-270 7))

(CFFI:DEFBITFIELD WL-OUTPUT-MODE
  (:CURRENT 1)
  (:PREFERRED 2))

(DEFPARAMETER *WL-REGION-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_region_interface"))

(CFFI:DEFCSTRUCT WL-REGION-IMPLEMENTATION)

(DEFUN IMPLEMENT-WL-REGION (&KEY)
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-REGION-IMPLEMENTATION))))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-REGION-SEND-DESTROY (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_region"))

(DEFUN WL-REGION-SEND-ADD (WAYLAND-CLIENT-PROTOCOL::RESOURCE X Y WIDTH HEIGHT)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_region" :INT32 X :INT32 Y :INT32
   WIDTH :INT32 HEIGHT))

(DEFUN WL-REGION-SEND-SUBTRACT
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE X Y WIDTH HEIGHT)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 2 "wl_region" :INT32 X :INT32 Y :INT32
   WIDTH :INT32 HEIGHT))

(DEFPARAMETER *WL-SUBCOMPOSITOR-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_subcompositor_interface"))

(CFFI:DEFCSTRUCT WL-SUBCOMPOSITOR-IMPLEMENTATION)

(DEFUN IMPLEMENT-WL-SUBCOMPOSITOR (&KEY)
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-SUBCOMPOSITOR-IMPLEMENTATION))))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-SUBCOMPOSITOR-SEND-DESTROY (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_subcompositor"))

(DEFUN WL-SUBCOMPOSITOR-SEND-GET-SUBSURFACE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE ID SURFACE PARENT)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_subcompositor" :POINTER ID :POINTER
   SURFACE :POINTER PARENT))

(CFFI:DEFCENUM WL-SUBCOMPOSITOR-ERROR
  (:BAD-SURFACE 0))

(DEFPARAMETER *WL-SUBSURFACE-INTERFACE*
  (CFFI:FOREIGN-SYMBOL-POINTER "wl_subsurface_interface"))

(CFFI:DEFCSTRUCT WL-SUBSURFACE-IMPLEMENTATION)

(DEFUN IMPLEMENT-WL-SUBSURFACE (&KEY)
  (LET ((GENERATE-BINDINGS::IMPLEMENTATION
         (CFFI:FOREIGN-ALLOC '(:STRUCT WL-SUBSURFACE-IMPLEMENTATION))))
    GENERATE-BINDINGS::IMPLEMENTATION))

(DEFUN WL-SUBSURFACE-SEND-DESTROY (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 0 "wl_subsurface"))

(DEFUN WL-SUBSURFACE-SEND-SET-POSITION (WAYLAND-CLIENT-PROTOCOL::RESOURCE X Y)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 1 "wl_subsurface" :INT32 X :INT32 Y))

(DEFUN WL-SUBSURFACE-SEND-PLACE-ABOVE
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE SIBLING)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 2 "wl_subsurface" :POINTER SIBLING))

(DEFUN WL-SUBSURFACE-SEND-PLACE-BELOW
       (WAYLAND-CLIENT-PROTOCOL::RESOURCE SIBLING)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 3 "wl_subsurface" :POINTER SIBLING))

(DEFUN WL-SUBSURFACE-SEND-SET-SYNC (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 4 "wl_subsurface"))

(DEFUN WL-SUBSURFACE-SEND-SET-DESYNC (WAYLAND-CLIENT-PROTOCOL::RESOURCE)
  (WAYLAND-CLIENT-CORE:WL-PROXY-MARSHAL-CONSTRUCTOR
   WAYLAND-CLIENT-PROTOCOL::RESOURCE 5 "wl_subsurface"))

(CFFI:DEFCENUM WL-SUBSURFACE-ERROR
  (:BAD-SURFACE 0))

(DEFUN INITIALIZE-WAYLAND-CLIENT-INTERFACES ()
  (SETF WL-DISPLAY-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_display_interface"))
  (SETF WL-REGISTRY-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_registry_interface"))
  (SETF WL-CALLBACK-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_callback_interface"))
  (SETF WL-COMPOSITOR-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_compositor_interface"))
  (SETF WL-SHM-POOL-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_shm_pool_interface"))
  (SETF WL-SHM-INTERFACE (CFFI:FOREIGN-SYMBOL-POINTER "wl_shm_interface"))
  (SETF WL-BUFFER-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_buffer_interface"))
  (SETF WL-DATA-OFFER-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_data_offer_interface"))
  (SETF WL-DATA-SOURCE-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_data_source_interface"))
  (SETF WL-DATA-DEVICE-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_data_device_interface"))
  (SETF WL-DATA-DEVICE-MANAGER-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_data_device_manager_interface"))
  (SETF WL-SHELL-INTERFACE (CFFI:FOREIGN-SYMBOL-POINTER "wl_shell_interface"))
  (SETF WL-SHELL-SURFACE-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_shell_surface_interface"))
  (SETF WL-SURFACE-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_surface_interface"))
  (SETF WL-SEAT-INTERFACE (CFFI:FOREIGN-SYMBOL-POINTER "wl_seat_interface"))
  (SETF WL-POINTER-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_pointer_interface"))
  (SETF WL-KEYBOARD-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_keyboard_interface"))
  (SETF WL-TOUCH-INTERFACE (CFFI:FOREIGN-SYMBOL-POINTER "wl_touch_interface"))
  (SETF WL-OUTPUT-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_output_interface"))
  (SETF WL-REGION-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_region_interface"))
  (SETF WL-SUBCOMPOSITOR-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_subcompositor_interface"))
  (SETF WL-SUBSURFACE-INTERFACE
          (CFFI:FOREIGN-SYMBOL-POINTER "wl_subsurface_interface")))
